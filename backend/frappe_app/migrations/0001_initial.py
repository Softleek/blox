# Generated by Django 4.2.5 on 2025-03-16 12:38

import core.models.template
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("cms_app", "0034_nightfall"),
    ]

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "address_title",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Billing", "Billing"),
                            ("Shipping", "Shipping"),
                            ("Office", "Office"),
                            ("Personal", "Personal"),
                            ("Plant", "Plant"),
                            ("Postal", "Postal"),
                            ("Shop", "Shop"),
                            ("Subsidiary", "Subsidiary"),
                            ("Warehouse", "Warehouse"),
                            ("Current", "Current"),
                            ("Permanent", "Permanent"),
                            ("Other", "Other"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "address_line1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_line2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                ("county", models.CharField(blank=True, max_length=255, null=True)),
                ("state", models.CharField(blank=True, max_length=255, null=True)),
                ("pincode", models.CharField(blank=True, max_length=255, null=True)),
                ("email_id", models.CharField(blank=True, max_length=255, null=True)),
                ("phone", models.CharField(blank=True, max_length=255, null=True)),
                ("fax", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "is_primary_address",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "is_shipping_address",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("disabled", models.BooleanField(blank=True, default="0", null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AmendedDocumentNamingSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "action",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Amend Counter", "Amend Counter"),
                            ("Default Naming", "Default Naming"),
                        ],
                        default="Amend Counter",
                        max_length=255,
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AssignmentRule",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("priority", models.IntegerField(blank=True, null=True)),
                ("disabled", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "description",
                    models.TextField(
                        blank=True, default="Automatic Assignment", null=True
                    ),
                ),
                (
                    "assign_condition",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "unassign_condition",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "rule",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Round Robin", "Round Robin"),
                            ("Load Balancing", "Load Balancing"),
                            ("Based on Field", "Based on Field"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "close_condition",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "due_date_based_on",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BlockModule",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("module", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BlogCategory",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("published", models.BooleanField(blank=True, default="1", null=True)),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "preview_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Blogger",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("disabled", models.BooleanField(blank=True, default="0", null=True)),
                ("short_name", models.CharField(blank=True, max_length=255, null=True)),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                ("bio", models.TextField(blank=True, null=True)),
                ("avatar", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Color",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("color", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Communication",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("subject", models.TextField(blank=True, null=True)),
                (
                    "communication_medium",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Email", "Email"),
                            ("Chat", "Chat"),
                            ("Phone", "Phone"),
                            ("SMS", "SMS"),
                            ("Event", "Event"),
                            ("Meeting", "Meeting"),
                            ("Visit", "Visit"),
                            ("Other", "Other"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("sender", models.CharField(blank=True, max_length=255, null=True)),
                ("recipients", models.CharField(blank=True, max_length=255, null=True)),
                ("cc", models.CharField(blank=True, max_length=255, null=True)),
                ("bcc", models.CharField(blank=True, max_length=255, null=True)),
                ("phone_no", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "delivery_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Sent", "Sent"),
                            ("Bounced", "Bounced"),
                            ("Opened", "Opened"),
                            ("Marked As Spam", "Marked As Spam"),
                            ("Rejected", "Rejected"),
                            ("Delayed", "Delayed"),
                            ("Soft-Bounced", "Soft-Bounced"),
                            ("Clicked", "Clicked"),
                            ("Recipient Unsubscribed", "Recipient Unsubscribed"),
                            ("Error", "Error"),
                            ("Expired", "Expired"),
                            ("Sending", "Sending"),
                            ("Read", "Read"),
                            ("Scheduled", "Scheduled"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("content", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "text_content",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "communication_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Communication", "Communication"),
                            ("Automated Message", "Automated Message"),
                        ],
                        default="Communication",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Open", "Open"),
                            ("Replied", "Replied"),
                            ("Closed", "Closed"),
                            ("Linked", "Linked"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "sent_or_received",
                    models.CharField(
                        blank=True,
                        choices=[("Sent", "Sent"), ("Received", "Received")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "communication_date",
                    models.DateTimeField(blank=True, default="Now", null=True),
                ),
                (
                    "read_receipt",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "sender_full_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "read_by_recipient",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("read_by_recipient_on", models.DateTimeField(blank=True, null=True)),
                (
                    "reference_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "reference_owner",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "unread_notification_sent",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("seen", models.BooleanField(blank=True, default="0", null=True)),
                ("_user_tags", models.CharField(blank=True, max_length=255, null=True)),
                ("message_id", models.TextField(blank=True, null=True)),
                ("uid", models.IntegerField(blank=True, null=True)),
                (
                    "email_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Open", "Open"),
                            ("Spam", "Spam"),
                            ("Trash", "Trash"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "has_attachment",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "imap_folder",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("send_after", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ConnectedApp",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "provider_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "openid_configuration",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("client_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "redirect_uri",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "client_secret",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("authorization_uri", models.TextField(blank=True, null=True)),
                ("token_uri", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "revocation_uri",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "userinfo_uri",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "introspection_uri",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "country_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "date_format",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "time_format",
                    models.CharField(
                        blank=True, default="HH:mm:ss", max_length=255, null=True
                    ),
                ),
                ("time_zones", models.TextField(blank=True, null=True)),
                ("code", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "currency_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("enabled", models.BooleanField(blank=True, default="0", null=True)),
                ("fraction", models.CharField(blank=True, max_length=255, null=True)),
                ("fraction_units", models.IntegerField(blank=True, null=True)),
                (
                    "smallest_currency_fraction_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("symbol", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "number_format",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("#,###.##", "#,###.##"),
                            ("#.###,##", "#.###,##"),
                            ("# ###.##", "# ###.##"),
                            ("# ###,##", "# ###,##"),
                            ("#'###.##", "#'###.##"),
                            ("#, ###.##", "#, ###.##"),
                            ("#,##,###.##", "#,##,###.##"),
                            ("#,###.###", "#,###.###"),
                            ("#.###", "#.###"),
                            ("#,###", "#,###"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "symbol_on_right",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CustomHTMLBlock",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("html", models.CharField(blank=True, max_length=255, null=True)),
                ("preview", models.TextField(blank=True, null=True)),
                ("script", models.CharField(blank=True, max_length=255, null=True)),
                ("style", models.CharField(blank=True, max_length=255, null=True)),
                ("js_message", models.TextField(blank=True, null=True)),
                ("private", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Dashboard",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "dashboard_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_default", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "chart_options",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "is_standard",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DashboardChart",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("chart_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "chart_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Count", "Count"),
                            ("Sum", "Sum"),
                            ("Average", "Average"),
                            ("Group By", "Group By"),
                            ("Custom", "Custom"),
                            ("Report", "Report"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "based_on",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "value_based_on",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "timespan",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Last Year", "Last Year"),
                            ("Last Quarter", "Last Quarter"),
                            ("Last Month", "Last Month"),
                            ("Last Week", "Last Week"),
                            ("Select Date Range", "Select Date Range"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "time_interval",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Yearly", "Yearly"),
                            ("Quarterly", "Quarterly"),
                            ("Monthly", "Monthly"),
                            ("Weekly", "Weekly"),
                            ("Daily", "Daily"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("timeseries", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "filters_json",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Line", "Line"),
                            ("Bar", "Bar"),
                            ("Percentage", "Percentage"),
                            ("Pie", "Pie"),
                            ("Donut", "Donut"),
                            ("Heatmap", "Heatmap"),
                        ],
                        default="Line",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=255, null=True)),
                ("last_synced_on", models.DateTimeField(blank=True, null=True)),
                (
                    "group_by_based_on",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "group_by_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Count", "Count"),
                            ("Sum", "Sum"),
                            ("Average", "Average"),
                        ],
                        default="Count",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "aggregate_function_based_on",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("number_of_groups", models.IntegerField(blank=True, null=True)),
                ("from_date", models.DateField(blank=True, null=True)),
                ("to_date", models.DateField(blank=True, null=True)),
                (
                    "x_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "custom_options",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_public", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "heatmap_year",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "is_standard",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "dynamic_filters_json",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "use_report_chart",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DashboardChartCurrency",
                        to="frappe_app.currency",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DataImport",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "import_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Insert New Records", "Insert New Records"),
                            ("Update Existing Records", "Update Existing Records"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "import_file",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("import_preview", models.TextField(blank=True, null=True)),
                (
                    "template_options",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("import_log_preview", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Pending", "Pending"),
                            ("Success", "Success"),
                            ("Partial Success", "Partial Success"),
                            ("Error", "Error"),
                            ("Timed Out", "Timed Out"),
                        ],
                        default="Pending",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "template_warnings",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "submit_after_import",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("import_warnings", models.TextField(blank=True, null=True)),
                (
                    "download_template",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "mute_emails",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "show_failed_logs",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("html_5", models.TextField(blank=True, null=True)),
                (
                    "google_sheets_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "refresh_google_sheet",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("payload_count", models.IntegerField(blank=True, null=True)),
                (
                    "delimiter_options",
                    models.CharField(
                        blank=True, default=",;\\t|", max_length=255, null=True
                    ),
                ),
                (
                    "custom_delimiters",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "use_csv_sniffer",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DefaultValue",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("defkey", models.CharField(blank=True, max_length=255, null=True)),
                ("defvalue", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocField",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fieldtype",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Autocomplete", "Autocomplete"),
                            ("Attach", "Attach"),
                            ("Attach Image", "Attach Image"),
                            ("Barcode", "Barcode"),
                            ("Button", "Button"),
                            ("Check", "Check"),
                            ("Code", "Code"),
                            ("Color", "Color"),
                            ("Column Break", "Column Break"),
                            ("Currency", "Currency"),
                            ("Data", "Data"),
                            ("Date", "Date"),
                            ("Datetime", "Datetime"),
                            ("Duration", "Duration"),
                            ("Dynamic Link", "Dynamic Link"),
                            ("Float", "Float"),
                            ("Fold", "Fold"),
                            ("Geolocation", "Geolocation"),
                            ("Heading", "Heading"),
                            ("HTML", "HTML"),
                            ("HTML Editor", "HTML Editor"),
                            ("Icon", "Icon"),
                            ("Image", "Image"),
                            ("Int", "Int"),
                            ("JSON", "JSON"),
                            ("Link", "Link"),
                            ("Long Text", "Long Text"),
                            ("Markdown Editor", "Markdown Editor"),
                            ("Password", "Password"),
                            ("Percent", "Percent"),
                            ("Phone", "Phone"),
                            ("Read Only", "Read Only"),
                            ("Rating", "Rating"),
                            ("Section Break", "Section Break"),
                            ("Select", "Select"),
                            ("Signature", "Signature"),
                            ("Small Text", "Small Text"),
                            ("Tab Break", "Tab Break"),
                            ("Table", "Table"),
                            ("Table MultiSelect", "Table MultiSelect"),
                            ("Text", "Text"),
                            ("Text Editor", "Text Editor"),
                            ("Time", "Time"),
                        ],
                        default="Data",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("fieldname", models.CharField(blank=True, max_length=255, null=True)),
                ("reqd", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "precision",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "0"),
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                            ("7", "7"),
                            ("8", "8"),
                            ("9", "9"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("length", models.IntegerField(blank=True, null=True)),
                (
                    "search_index",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "in_list_view",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "in_standard_filter",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "in_global_search",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("in_preview", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "allow_in_quick_entry",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("bold", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "translatable",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "collapsible",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "collapsible_depends_on",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("options", models.TextField(blank=True, null=True)),
                ("default", models.TextField(blank=True, null=True)),
                ("fetch_from", models.TextField(blank=True, null=True)),
                (
                    "fetch_if_empty",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("depends_on", models.CharField(blank=True, max_length=255, null=True)),
                ("hidden", models.BooleanField(blank=True, default="0", null=True)),
                ("read_only", models.BooleanField(blank=True, default="0", null=True)),
                ("unique", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "set_only_once",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_bulk_edit",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("permlevel", models.IntegerField(blank=True, default="0", null=True)),
                (
                    "ignore_user_permissions",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_on_submit",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "report_hide",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "remember_last_selected_value",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "ignore_xss_filter",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("in_filter", models.BooleanField(blank=True, default="0", null=True)),
                ("no_copy", models.BooleanField(blank=True, default="0", null=True)),
                ("print_hide", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "print_hide_if_no_value",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "print_width",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("width", models.CharField(blank=True, max_length=255, null=True)),
                ("columns", models.IntegerField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "oldfieldname",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "oldfieldtype",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "mandatory_depends_on",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "read_only_depends_on",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("hide_days", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "hide_seconds",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "hide_border",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "non_negative",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("max_height", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "show_dashboard",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("is_virtual", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "documentation_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sort_options",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("link_filters", models.JSONField(blank=True, null=True)),
                (
                    "not_nullable",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "show_on_timeline",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "placeholder",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "make_attachment_public",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("sticky", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocPerm",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("if_owner", models.BooleanField(blank=True, default="0", null=True)),
                ("permlevel", models.IntegerField(blank=True, default="0", null=True)),
                ("read", models.BooleanField(blank=True, default="1", null=True)),
                ("write", models.BooleanField(blank=True, default="1", null=True)),
                ("create", models.BooleanField(blank=True, default="1", null=True)),
                ("delete", models.BooleanField(blank=True, default="1", null=True)),
                ("submit", models.BooleanField(blank=True, default="0", null=True)),
                ("cancel", models.BooleanField(blank=True, default="0", null=True)),
                ("amend", models.BooleanField(blank=True, default="0", null=True)),
                ("report", models.BooleanField(blank=True, default="1", null=True)),
                ("export", models.BooleanField(blank=True, default="1", null=True)),
                (
                    "custom_import",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("share", models.BooleanField(blank=True, default="1", null=True)),
                ("print", models.BooleanField(blank=True, default="1", null=True)),
                ("email", models.BooleanField(blank=True, default="1", null=True)),
                ("select", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocType",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "is_submittable",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("istable", models.BooleanField(blank=True, default="0", null=True)),
                ("issingle", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "editable_grid",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "quick_entry",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "track_changes",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("track_seen", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "track_views",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("custom", models.BooleanField(blank=True, default="0", null=True)),
                ("beta", models.BooleanField(blank=True, default="0", null=True)),
                ("autoname", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "timeline_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("max_attachments", models.IntegerField(blank=True, null=True)),
                (
                    "hide_toolbar",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("allow_copy", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "allow_rename",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "allow_import",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_events_in_timeline",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_auto_repeat",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "title_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "search_fields",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "default_print_format",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sort_field",
                    models.CharField(
                        blank=True, default="creation", max_length=255, null=True
                    ),
                ),
                (
                    "sort_order",
                    models.CharField(
                        blank=True,
                        choices=[("ASC", "ASC"), ("DESC", "DESC")],
                        default="DESC",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Document", "Document"),
                            ("Setup", "Setup"),
                            ("System", "System"),
                            ("Other", "Other"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("icon", models.CharField(blank=True, max_length=255, null=True)),
                ("color", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "show_preview_popup",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "show_name_in_global_search",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("read_only", models.BooleanField(blank=True, default="0", null=True)),
                ("in_create", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "has_web_view",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_guest_to_view",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "is_published_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "engine",
                    models.CharField(
                        blank=True,
                        choices=[("InnoDB", "InnoDB"), ("MyISAM", "MyISAM")],
                        default="InnoDB",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("is_tree", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "nsm_parent_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "documentation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "subject_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sender_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "email_append_to",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "index_web_pages_for_search",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                ("is_virtual", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "website_search_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "naming_rule",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Set by user", "Set by user"),
                            ("Autoincrement", "Autoincrement"),
                            ("By fieldname", "By fieldname"),
                            ("By 'Naming Series' field", "By 'Naming Series' field"),
                            ("Expression", "Expression"),
                            ("Expression (old style)", "Expression (old style)"),
                            ("Random", "Random"),
                            ("UUID", "UUID"),
                            ("By script", "By script"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "migration_hash",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "show_title_field_in_link",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "translated_doctype",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "make_attachments_public",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "queue_in_background",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "default_view",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "force_re_route_to_default_view",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "is_calendar_and_gantt",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("form_builder", models.TextField(blank=True, null=True)),
                (
                    "sender_name_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "row_format",
                    models.CharField(
                        blank=True,
                        choices=[("Dynamic", "Dynamic"), ("Compressed", "Compressed")],
                        default="Dynamic",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "grid_page_length",
                    models.IntegerField(blank=True, default="50", null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("domain", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmailAccount",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("email_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "login_id_is_different",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("login_id", models.CharField(blank=True, max_length=255, null=True)),
                ("password", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "awaiting_password",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "ascii_encode_password",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "email_account_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "service",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Frappe Mail", "Frappe Mail"),
                            ("GMail", "GMail"),
                            ("Sendgrid", "Sendgrid"),
                            ("SparkPost", "SparkPost"),
                            ("Yahoo Mail", "Yahoo Mail"),
                            ("Outlook.com", "Outlook.com"),
                            ("Yandex.Mail", "Yandex.Mail"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "enable_incoming",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("use_imap", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "email_server",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("use_ssl", models.BooleanField(blank=True, default="0", null=True)),
                ("attachment_limit", models.IntegerField(blank=True, null=True)),
                (
                    "default_incoming",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "email_sync_option",
                    models.CharField(
                        blank=True,
                        choices=[("ALL", "ALL"), ("UNSEEN", "UNSEEN")],
                        default="UNSEEN",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "initial_sync_count",
                    models.CharField(
                        blank=True,
                        choices=[("100", "100"), ("250", "250"), ("500", "500")],
                        default="250",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "notify_if_unreplied",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "unreplied_for_mins",
                    models.IntegerField(blank=True, default="30", null=True),
                ),
                ("send_notification_to", models.TextField(blank=True, null=True)),
                (
                    "enable_outgoing",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "smtp_server",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("use_tls", models.BooleanField(blank=True, default="0", null=True)),
                ("smtp_port", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "default_outgoing",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "always_use_account_email_id_as_sender",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "always_use_account_name_as_sender_name",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "send_unsubscribe_message",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "track_email_status",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "no_smtp_authentication",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "add_signature",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("signature", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "enable_auto_reply",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "auto_reply_message",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("footer", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "uidvalidity",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("uidnext", models.IntegerField(blank=True, null=True)),
                ("no_failed", models.IntegerField(blank=True, null=True)),
                (
                    "enable_automatic_linking",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "incoming_port",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "append_emails_to_sent_folder",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "use_ssl_for_outgoing",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "create_contact",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                ("brand_logo", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "authorize_api_access",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "auth_method",
                    models.CharField(
                        blank=True,
                        choices=[("Basic", "Basic"), ("OAuth", "OAuth")],
                        default="Basic",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "use_starttls",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "validate_ssl_certificate",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "frappe_mail_site",
                    models.CharField(
                        blank=True,
                        default="https://frappemail.com",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("last_synced_at", models.DateTimeField(blank=True, null=True)),
                (
                    "validate_frappe_mail_settings",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("api_key", models.CharField(blank=True, max_length=255, null=True)),
                ("api_secret", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "backend_app_flow",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "sent_folder_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("always_bcc", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "append_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EmailAccountAppendTo",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "connected_app",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EmailAccountConnectedApp",
                        to="frappe_app.connectedapp",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmailGroup",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "total_subscribers",
                    models.IntegerField(blank=True, default="0", null=True),
                ),
                (
                    "welcome_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "add_query_parameters",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmailTemplate",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("subject", models.CharField(blank=True, max_length=255, null=True)),
                ("response", models.CharField(blank=True, max_length=255, null=True)),
                ("email_reply_help", models.TextField(blank=True, null=True)),
                ("use_html", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "response_html",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FormTour",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "save_on_complete",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "is_standard",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "first_document",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "include_name_field",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("ui_tour", models.BooleanField(blank=True, default="0", null=True)),
                ("page_route", models.TextField(blank=True, null=True)),
                (
                    "view_name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Workspaces", "Workspaces"),
                            ("List", "List"),
                            ("Form", "Form"),
                            ("Tree", "Tree"),
                            ("Page", "Page"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "list_name",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("List", "List"),
                            ("Report", "Report"),
                            ("Dashboard", "Dashboard"),
                            ("Kanban", "Kanban"),
                            ("Gantt", "Gantt"),
                            ("Calendar", "Calendar"),
                            ("File", "File"),
                            ("Image", "Image"),
                            ("Inbox", "Inbox"),
                            ("Map", "Map"),
                        ],
                        default="List",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "track_steps",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "new_document_form",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "dashboard_name",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="FormTourDashboardName",
                        to="frappe_app.dashboard",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Gender",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("gender", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GlobalSearchDocType",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="GlobalSearchDocTypeDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HasRole",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstalledApplication",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("git_branch", models.CharField(blank=True, max_length=255, null=True)),
                ("app_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "app_version",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="KanbanBoard",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "kanban_board_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "field_name",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("filters", models.CharField(blank=True, max_length=255, null=True)),
                ("private", models.BooleanField(blank=True, default="0", null=True)),
                ("fields", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "show_labels",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Language",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "language_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "language_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("flag", models.CharField(blank=True, max_length=255, null=True)),
                ("enabled", models.BooleanField(blank=True, default="1", null=True)),
                (
                    "date_format",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("yyyy-mm-dd", "yyyy-mm-dd"),
                            ("dd-mm-yyyy", "dd-mm-yyyy"),
                            ("dd/mm/yyyy", "dd/mm/yyyy"),
                            ("dd.mm.yyyy", "dd.mm.yyyy"),
                            ("mm/dd/yyyy", "mm/dd/yyyy"),
                            ("mm-dd-yyyy", "mm-dd-yyyy"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "time_format",
                    models.CharField(
                        blank=True,
                        choices=[("HH:mm:ss", "HH:mm:ss"), ("HH:mm", "HH:mm")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "number_format",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("#,###.##", "#,###.##"),
                            ("#.###,##", "#.###,##"),
                            ("# ###.##", "# ###.##"),
                            ("# ###,##", "# ###,##"),
                            ("#'###.##", "#'###.##"),
                            ("#, ###.##", "#, ###.##"),
                            ("#,##,###.##", "#,##,###.##"),
                            ("#,###.###", "#,###.###"),
                            ("#.###", "#.###"),
                            ("#,###", "#,###"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "first_day_of_the_week",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Sunday", "Sunday"),
                            ("Monday", "Monday"),
                            ("Tuesday", "Tuesday"),
                            ("Wednesday", "Wednesday"),
                            ("Thursday", "Thursday"),
                            ("Friday", "Friday"),
                            ("Saturday", "Saturday"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "based_on",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="LanguageBasedOn",
                        to="frappe_app.language",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LDAPGroupMapping",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("ldap_group", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LetterHead",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "letter_head_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        choices=[("Image", "Image"), ("HTML", "HTML")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("disabled", models.BooleanField(blank=True, default="0", null=True)),
                ("is_default", models.BooleanField(blank=True, default="0", null=True)),
                ("image", models.CharField(blank=True, max_length=255, null=True)),
                ("content", models.TextField(blank=True, null=True)),
                ("footer", models.TextField(blank=True, null=True)),
                (
                    "align",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Left", "Left"),
                            ("Right", "Right"),
                            ("Center", "Center"),
                        ],
                        default="Left",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("image_height", models.FloatField(blank=True, null=True)),
                ("image_width", models.FloatField(blank=True, null=True)),
                (
                    "footer_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("footer_image_height", models.FloatField(blank=True, null=True)),
                ("footer_image_width", models.FloatField(blank=True, null=True)),
                (
                    "footer_align",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Left", "Left"),
                            ("Right", "Right"),
                            ("Center", "Center"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "footer_source",
                    models.CharField(
                        blank=True,
                        choices=[("Image", "Image"), ("HTML", "HTML")],
                        default="HTML",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "header_script",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "footer_script",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("instructions", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ModuleDef",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "module_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "app_name",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("custom", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ModuleProfile",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "module_profile_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("module_html", models.TextField(blank=True, null=True)),
                (
                    "block_modules",
                    models.ManyToManyField(
                        related_name="ModuleProfileBlockModules",
                        to="frappe_app.blockmodule",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NavbarItem",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("item_label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "item_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Route", "Route"),
                            ("Action", "Action"),
                            ("Separator", "Separator"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("hidden", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "is_standard",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                ("action", models.CharField(blank=True, max_length=255, null=True)),
                ("condition", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NumberCard",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "function",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Count", "Count"),
                            ("Sum", "Sum"),
                            ("Average", "Average"),
                            ("Minimum", "Minimum"),
                            ("Maximum", "Maximum"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "aggregate_function_based_on",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "filters_json",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                ("color", models.CharField(blank=True, max_length=255, null=True)),
                ("is_public", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "show_percentage_stats",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "stats_time_interval",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Daily", "Daily"),
                            ("Weekly", "Weekly"),
                            ("Monthly", "Monthly"),
                            ("Yearly", "Yearly"),
                        ],
                        default="Daily",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "is_standard",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "dynamic_filters_json",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Document Type", "Document Type"),
                            ("Report", "Report"),
                            ("Custom", "Custom"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "report_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("method", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "filters_config",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "report_function",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Sum", "Sum"),
                            ("Average", "Average"),
                            ("Minimum", "Minimum"),
                            ("Maximum", "Maximum"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NumberCardCurrency",
                        to="frappe_app.currency",
                    ),
                ),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NumberCardDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NumberCardModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NumberCardParentDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OAuthScope",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("scope", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OnboardingStep",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "is_complete",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "action",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Create Entry", "Create Entry"),
                            ("Update Settings", "Update Settings"),
                            ("Show Form Tour", "Show Form Tour"),
                            ("View Report", "View Report"),
                            ("Go to Page", "Go to Page"),
                            ("Watch Video", "Watch Video"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("video_url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "report_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_skipped", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "value_to_validate",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "report_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "report_reference_doctype",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_single", models.BooleanField(blank=True, default="0", null=True)),
                ("path", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "callback_title",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("callback_message", models.TextField(blank=True, null=True)),
                (
                    "validate_action",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "show_full_form",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "intro_video_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "action_label",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "show_form_tour",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "form_tour",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="OnboardingStepFormTour",
                        to="frappe_app.formtour",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="OnboardingStepReferenceDocument",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Package",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("readme", models.TextField(blank=True, null=True)),
                (
                    "package_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "license_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MIT License", "MIT License"),
                            (
                                "GNU General Public License",
                                "GNU General Public License",
                            ),
                            (
                                "GNU Affero General Public License",
                                "GNU Affero General Public License",
                            ),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("license", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PortalMenuItem",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("enabled", models.BooleanField(blank=True, default="0", null=True)),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                ("target", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PortalMenuItemReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PrintFormat",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("disabled", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "standard",
                    models.CharField(
                        blank=True,
                        choices=[("No", "No"), ("Yes", "Yes")],
                        default="No",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "custom_format",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "print_format_type",
                    models.CharField(
                        blank=True,
                        choices=[("Jinja", "Jinja"), ("JS", "JS")],
                        default="Jinja",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "raw_printing",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("html", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "raw_commands",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "align_labels_right",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "show_section_headings",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "line_breaks",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("font", models.CharField(blank=True, max_length=255, null=True)),
                ("css", models.CharField(blank=True, max_length=255, null=True)),
                ("custom_html_help", models.TextField(blank=True, null=True)),
                ("print_format_help", models.TextField(blank=True, null=True)),
                (
                    "format_data",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "print_format_builder",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "absolute_value",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "print_format_builder_beta",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("margin_top", models.FloatField(blank=True, default="15", null=True)),
                (
                    "margin_bottom",
                    models.FloatField(blank=True, default="15", null=True),
                ),
                ("margin_left", models.FloatField(blank=True, default="15", null=True)),
                (
                    "margin_right",
                    models.FloatField(blank=True, default="15", null=True),
                ),
                ("font_size", models.IntegerField(blank=True, default="14", null=True)),
                (
                    "page_number",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Hide", "Hide"),
                            ("Top Left", "Top Left"),
                            ("Top Center", "Top Center"),
                            ("Top Right", "Top Right"),
                            ("Bottom Left", "Bottom Left"),
                            ("Bottom Center", "Bottom Center"),
                            ("Bottom Right", "Bottom Right"),
                        ],
                        default="Hide",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "pdf_generator",
                    models.CharField(
                        blank=True,
                        choices=[("wkhtmltopdf", "wkhtmltopdf")],
                        default="wkhtmltopdf",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "default_print_language",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PrintFormatDefaultPrintLanguage",
                        to="frappe_app.language",
                    ),
                ),
                (
                    "doc_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PrintFormatDocType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PrintFormatModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Report",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "report_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "reference_report",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "is_standard",
                    models.CharField(
                        blank=True,
                        choices=[("No", "No"), ("Yes", "Yes")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "add_total_row",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "report_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Report Builder", "Report Builder"),
                            ("Query Report", "Query Report"),
                            ("Script Report", "Script Report"),
                            ("Custom Report", "Custom Report"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("disabled", models.BooleanField(blank=True, default="0", null=True)),
                ("query", models.CharField(blank=True, max_length=255, null=True)),
                ("javascript", models.CharField(blank=True, max_length=255, null=True)),
                ("json", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "prepared_report",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "report_script",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("timeout", models.IntegerField(blank=True, null=True)),
                (
                    "add_translate_data",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("role_name", models.CharField(blank=True, max_length=255, null=True)),
                ("disabled", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "desk_access",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "two_factor_auth",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("home_page", models.CharField(blank=True, max_length=255, null=True)),
                ("is_custom", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "restrict_to_domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="RoleRestrictToDomain",
                        to="frappe_app.domain",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RoleProfile",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "role_profile",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("roles_html", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "roles",
                    models.ManyToManyField(
                        related_name="RoleProfileRoles", to="frappe_app.hasrole"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RQJob",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "queue",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("default", "default"),
                            ("short", "short"),
                            ("long", "long"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("queued", "queued"),
                            ("started", "started"),
                            ("finished", "finished"),
                            ("failed", "failed"),
                            ("deferred", "deferred"),
                            ("scheduled", "scheduled"),
                            ("canceled", "canceled"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("job_id", models.CharField(blank=True, max_length=255, null=True)),
                ("exc_info", models.CharField(blank=True, max_length=255, null=True)),
                ("job_name", models.CharField(blank=True, max_length=255, null=True)),
                ("arguments", models.CharField(blank=True, max_length=255, null=True)),
                ("timeout", models.DurationField(blank=True, null=True)),
                ("time_taken", models.DurationField(blank=True, null=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ScheduledJobType",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("method", models.CharField(blank=True, max_length=255, null=True)),
                ("stopped", models.BooleanField(blank=True, default="0", null=True)),
                ("create_log", models.BooleanField(blank=True, default="0", null=True)),
                ("last_execution", models.DateTimeField(blank=True, null=True)),
                (
                    "cron_format",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "frequency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("All", "All"),
                            ("Hourly", "Hourly"),
                            ("Hourly Long", "Hourly Long"),
                            ("Daily", "Daily"),
                            ("Daily Long", "Daily Long"),
                            ("Weekly", "Weekly"),
                            ("Weekly Long", "Weekly Long"),
                            ("Monthly", "Monthly"),
                            ("Monthly Long", "Monthly Long"),
                            ("Cron", "Cron"),
                            ("Yearly", "Yearly"),
                            ("Annual", "Annual"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("next_execution", models.DateTimeField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SessionDefault",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ref_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SessionDefaultRefDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SMSParameter",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("parameter", models.CharField(blank=True, max_length=255, null=True)),
                ("value", models.CharField(blank=True, max_length=255, null=True)),
                ("header", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TopBarItem",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "parent_label",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("url", models.CharField(blank=True, max_length=255, null=True)),
                ("right", models.BooleanField(blank=True, default="1", null=True)),
                (
                    "open_in_new_tab",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enabled", models.BooleanField(blank=True, default="1", null=True)),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
                ("first_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("last_name", models.CharField(blank=True, max_length=255, null=True)),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "send_welcome_email",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "unsubscribed",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("username", models.CharField(blank=True, max_length=255, null=True)),
                ("time_zone", models.CharField(blank=True, max_length=255, null=True)),
                ("user_image", models.CharField(blank=True, max_length=255, null=True)),
                ("roles_html", models.TextField(blank=True, null=True)),
                ("phone", models.CharField(blank=True, max_length=255, null=True)),
                ("mobile_no", models.CharField(blank=True, max_length=255, null=True)),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "banner_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("interest", models.TextField(blank=True, null=True)),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "mute_sounds",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "new_password",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "logout_all_sessions",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "reset_password_key",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("last_password_reset_date", models.DateField(blank=True, null=True)),
                ("redirect_url", models.TextField(blank=True, null=True)),
                (
                    "document_follow_notify",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "document_follow_frequency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Hourly", "Hourly"),
                            ("Daily", "Daily"),
                            ("Weekly", "Weekly"),
                        ],
                        default="Daily",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "thread_notify",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "send_me_a_copy",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allowed_in_mentions",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "email_signature",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("modules_html", models.TextField(blank=True, null=True)),
                (
                    "home_settings",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "simultaneous_sessions",
                    models.IntegerField(blank=True, default="2", null=True),
                ),
                ("login_after", models.IntegerField(blank=True, null=True)),
                ("login_before", models.IntegerField(blank=True, null=True)),
                ("restrict_ip", models.TextField(blank=True, null=True)),
                (
                    "bypass_restrict_ip_check_if_2fa_enabled",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("last_login", models.CharField(blank=True, max_length=255, null=True)),
                ("last_ip", models.CharField(blank=True, max_length=255, null=True)),
                ("last_active", models.DateTimeField(blank=True, null=True)),
                ("last_known_versions", models.TextField(blank=True, null=True)),
                ("api_key", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "generate_keys",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("api_secret", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "desk_theme",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Light", "Light"),
                            ("Dark", "Dark"),
                            ("Automatic", "Automatic"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "last_reset_password_key_generated_on",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "follow_created_documents",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "follow_commented_documents",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "follow_liked_documents",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "follow_shared_documents",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "follow_assigned_documents",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "onboarding_status",
                    models.TextField(blank=True, default="{}", null=True),
                ),
                (
                    "code_editor_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("vscode", "vscode"),
                            ("vim", "vim"),
                            ("emacs", "emacs"),
                        ],
                        default="vscode",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "default_app",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("search_bar", models.BooleanField(blank=True, default="1", null=True)),
                (
                    "notifications",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "list_sidebar",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "bulk_actions",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "view_switcher",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "form_sidebar",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                ("timeline", models.BooleanField(blank=True, default="1", null=True)),
                ("dashboard", models.BooleanField(blank=True, default="1", null=True)),
                (
                    "block_modules",
                    models.ManyToManyField(
                        related_name="UserBlockModules", to="frappe_app.blockmodule"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserDocumentType",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("read", models.BooleanField(blank=True, default="1", null=True)),
                ("write", models.BooleanField(blank=True, default="0", null=True)),
                ("create", models.BooleanField(blank=True, default="0", null=True)),
                ("is_custom", models.BooleanField(blank=True, default="0", null=True)),
                ("submit", models.BooleanField(blank=True, default="0", null=True)),
                ("cancel", models.BooleanField(blank=True, default="0", null=True)),
                ("amend", models.BooleanField(blank=True, default="0", null=True)),
                ("delete", models.BooleanField(blank=True, default="0", null=True)),
                ("email", models.BooleanField(blank=True, default="1", null=True)),
                ("share", models.BooleanField(blank=True, default="1", null=True)),
                ("print", models.BooleanField(blank=True, default="1", null=True)),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserDocumentTypeDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserSelectDocumentType",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserSelectDocumentTypeDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Webhook",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "webhook_docevent",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("after_insert", "after_insert"),
                            ("on_update", "on_update"),
                            ("on_submit", "on_submit"),
                            ("on_cancel", "on_cancel"),
                            ("on_trash", "on_trash"),
                            ("on_update_after_submit", "on_update_after_submit"),
                            ("on_change", "on_change"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("condition", models.TextField(blank=True, null=True)),
                ("html_condition", models.TextField(blank=True, null=True)),
                ("request_url", models.TextField(blank=True, null=True)),
                (
                    "request_structure",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Form URL-Encoded", "Form URL-Encoded"),
                            ("JSON", "JSON"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "webhook_json",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "enable_security",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "webhook_secret",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("enabled", models.BooleanField(blank=True, default="1", null=True)),
                (
                    "request_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("POST", "POST"),
                            ("PUT", "PUT"),
                            ("DELETE", "DELETE"),
                        ],
                        default="POST",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "is_dynamic_url",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("timeout", models.IntegerField(blank=True, default="5", null=True)),
                (
                    "background_jobs_queue",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebsiteMetaTag",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("key", models.CharField(blank=True, max_length=255, null=True)),
                ("value", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebsiteRouteRedirect",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("source", models.TextField(blank=True, null=True)),
                ("target", models.TextField(blank=True, null=True)),
                (
                    "redirect_http_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("301", "301"),
                            ("302", "302"),
                            ("307", "307"),
                            ("308", "308"),
                        ],
                        default="301",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkflowActionMaster",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "workflow_action_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkflowState",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "workflow_state_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "icon",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("glass", "glass"),
                            ("music", "music"),
                            ("search", "search"),
                            ("envelope", "envelope"),
                            ("heart", "heart"),
                            ("star", "star"),
                            ("star-empty", "star-empty"),
                            ("user", "user"),
                            ("film", "film"),
                            ("th-large", "th-large"),
                            ("th", "th"),
                            ("th-list", "th-list"),
                            ("ok", "ok"),
                            ("remove", "remove"),
                            ("zoom-in", "zoom-in"),
                            ("zoom-out", "zoom-out"),
                            ("off", "off"),
                            ("signal", "signal"),
                            ("cog", "cog"),
                            ("trash", "trash"),
                            ("home", "home"),
                            ("file", "file"),
                            ("time", "time"),
                            ("road", "road"),
                            ("download-alt", "download-alt"),
                            ("download", "download"),
                            ("upload", "upload"),
                            ("inbox", "inbox"),
                            ("play-circle", "play-circle"),
                            ("repeat", "repeat"),
                            ("refresh", "refresh"),
                            ("list-alt", "list-alt"),
                            ("lock", "lock"),
                            ("flag", "flag"),
                            ("headphones", "headphones"),
                            ("volume-off", "volume-off"),
                            ("volume-down", "volume-down"),
                            ("volume-up", "volume-up"),
                            ("qrcode", "qrcode"),
                            ("barcode", "barcode"),
                            ("tag", "tag"),
                            ("tags", "tags"),
                            ("book", "book"),
                            ("bookmark", "bookmark"),
                            ("print", "print"),
                            ("camera", "camera"),
                            ("font", "font"),
                            ("bold", "bold"),
                            ("italic", "italic"),
                            ("text-height", "text-height"),
                            ("text-width", "text-width"),
                            ("align-left", "align-left"),
                            ("align-center", "align-center"),
                            ("align-right", "align-right"),
                            ("align-justify", "align-justify"),
                            ("list", "list"),
                            ("indent-left", "indent-left"),
                            ("indent-right", "indent-right"),
                            ("facetime-video", "facetime-video"),
                            ("picture", "picture"),
                            ("pencil", "pencil"),
                            ("map-marker", "map-marker"),
                            ("adjust", "adjust"),
                            ("tint", "tint"),
                            ("edit", "edit"),
                            ("share", "share"),
                            ("check", "check"),
                            ("move", "move"),
                            ("step-backward", "step-backward"),
                            ("fast-backward", "fast-backward"),
                            ("backward", "backward"),
                            ("play", "play"),
                            ("pause", "pause"),
                            ("stop", "stop"),
                            ("forward", "forward"),
                            ("fast-forward", "fast-forward"),
                            ("step-forward", "step-forward"),
                            ("eject", "eject"),
                            ("chevron-left", "chevron-left"),
                            ("chevron-right", "chevron-right"),
                            ("plus-sign", "plus-sign"),
                            ("minus-sign", "minus-sign"),
                            ("remove-sign", "remove-sign"),
                            ("ok-sign", "ok-sign"),
                            ("question-sign", "question-sign"),
                            ("info-sign", "info-sign"),
                            ("screenshot", "screenshot"),
                            ("remove-circle", "remove-circle"),
                            ("ok-circle", "ok-circle"),
                            ("ban-circle", "ban-circle"),
                            ("arrow-left", "arrow-left"),
                            ("arrow-right", "arrow-right"),
                            ("arrow-up", "arrow-up"),
                            ("arrow-down", "arrow-down"),
                            ("share-alt", "share-alt"),
                            ("resize-full", "resize-full"),
                            ("resize-small", "resize-small"),
                            ("plus", "plus"),
                            ("minus", "minus"),
                            ("asterisk", "asterisk"),
                            ("exclamation-sign", "exclamation-sign"),
                            ("gift", "gift"),
                            ("leaf", "leaf"),
                            ("fire", "fire"),
                            ("eye-open", "eye-open"),
                            ("eye-close", "eye-close"),
                            ("warning-sign", "warning-sign"),
                            ("plane", "plane"),
                            ("calendar", "calendar"),
                            ("random", "random"),
                            ("comment", "comment"),
                            ("magnet", "magnet"),
                            ("chevron-up", "chevron-up"),
                            ("chevron-down", "chevron-down"),
                            ("retweet", "retweet"),
                            ("shopping-cart", "shopping-cart"),
                            ("folder-close", "folder-close"),
                            ("folder-open", "folder-open"),
                            ("resize-vertical", "resize-vertical"),
                            ("resize-horizontal", "resize-horizontal"),
                            ("hdd", "hdd"),
                            ("bullhorn", "bullhorn"),
                            ("bell", "bell"),
                            ("certificate", "certificate"),
                            ("thumbs-up", "thumbs-up"),
                            ("thumbs-down", "thumbs-down"),
                            ("hand-right", "hand-right"),
                            ("hand-left", "hand-left"),
                            ("hand-up", "hand-up"),
                            ("hand-down", "hand-down"),
                            ("circle-arrow-right", "circle-arrow-right"),
                            ("circle-arrow-left", "circle-arrow-left"),
                            ("circle-arrow-up", "circle-arrow-up"),
                            ("circle-arrow-down", "circle-arrow-down"),
                            ("globe", "globe"),
                            ("wrench", "wrench"),
                            ("tasks", "tasks"),
                            ("filter", "filter"),
                            ("briefcase", "briefcase"),
                            ("fullscreen", "fullscreen"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "style",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Primary", "Primary"),
                            ("Info", "Info"),
                            ("Success", "Success"),
                            ("Warning", "Warning"),
                            ("Danger", "Danger"),
                            ("Inverse", "Inverse"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkspaceShortcut",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DocType", "DocType"),
                            ("Report", "Report"),
                            ("Page", "Page"),
                            ("Dashboard", "Dashboard"),
                            ("URL", "URL"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("link_to", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "doc_view",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("List", "List"),
                            ("Report Builder", "Report Builder"),
                            ("Dashboard", "Dashboard"),
                            ("Tree", "Tree"),
                            ("New", "New"),
                            ("Calendar", "Calendar"),
                            ("Kanban", "Kanban"),
                            ("Image", "Image"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                ("icon", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "stats_filter",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("color", models.CharField(blank=True, max_length=255, null=True)),
                ("format", models.CharField(blank=True, max_length=255, null=True)),
                ("url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "kanban_board",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkspaceShortcutKanbanBoard",
                        to="frappe_app.kanbanboard",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "restrict_to_domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkspaceShortcutRestrictToDomain",
                        to="frappe_app.domain",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkspaceSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("workspace_visibility_json", models.JSONField(blank=True, null=True)),
                (
                    "workspace_setup_completed",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkspaceQuickList",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "quick_list_filter",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkspaceQuickListDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkspaceNumberCard",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "number_card_name",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkspaceNumberCardNumberCardName",
                        to="frappe_app.numbercard",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkspaceLink",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[("Link", "Link"), ("Card Break", "Card Break")],
                        default="Link",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                ("icon", models.CharField(blank=True, max_length=255, null=True)),
                ("hidden", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "link_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DocType", "DocType"),
                            ("Page", "Page"),
                            ("Report", "Report"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("link_to", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "dependencies",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("onboard", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "is_query_report",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("link_count", models.IntegerField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "only_for",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkspaceLinkOnlyFor",
                        to="frappe_app.country",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "report_ref_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkspaceLinkReportRefDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkspaceCustomBlock",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "custom_block_name",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkspaceCustomBlockCustomBlockName",
                        to="frappe_app.customhtmlblock",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkspaceChart",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "chart_name",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkspaceChartChartName",
                        to="frappe_app.dashboardchart",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Workspace",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                ("for_user", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "hide_custom",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("icon", models.CharField(blank=True, max_length=255, null=True)),
                ("public", models.BooleanField(blank=True, default="0", null=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("content", models.TextField(blank=True, default="[]", null=True)),
                ("sequence_id", models.FloatField(blank=True, null=True)),
                ("is_hidden", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "indicator_color",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("green", "green"),
                            ("cyan", "cyan"),
                            ("blue", "blue"),
                            ("orange", "orange"),
                            ("yellow", "yellow"),
                            ("gray", "gray"),
                            ("grey", "grey"),
                            ("red", "red"),
                            ("pink", "pink"),
                            ("darkgrey", "darkgrey"),
                            ("purple", "purple"),
                            ("light-blue", "light-blue"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("app", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Workspace", "Workspace"),
                            ("Link", "Link"),
                            ("URL", "URL"),
                        ],
                        default="Workspace",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "link_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DocType", "DocType"),
                            ("Page", "Page"),
                            ("Report", "Report"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("link_to", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "external_link",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "charts",
                    models.ManyToManyField(
                        related_name="WorkspaceCharts", to="frappe_app.workspacechart"
                    ),
                ),
                (
                    "custom_blocks",
                    models.ManyToManyField(
                        related_name="WorkspaceCustomBlocks",
                        to="frappe_app.workspacecustomblock",
                    ),
                ),
                (
                    "links",
                    models.ManyToManyField(
                        related_name="WorkspaceLinks", to="frappe_app.workspacelink"
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkspaceModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "number_cards",
                    models.ManyToManyField(
                        related_name="WorkspaceNumberCards",
                        to="frappe_app.workspacenumbercard",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_page",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkspaceParentPage",
                        to="frappe_app.workspace",
                    ),
                ),
                (
                    "quick_lists",
                    models.ManyToManyField(
                        related_name="WorkspaceQuickLists",
                        to="frappe_app.workspacequicklist",
                    ),
                ),
                (
                    "restrict_to_domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkspaceRestrictToDomain",
                        to="frappe_app.domain",
                    ),
                ),
                (
                    "roles",
                    models.ManyToManyField(
                        related_name="WorkspaceRoles", to="frappe_app.hasrole"
                    ),
                ),
                (
                    "shortcuts",
                    models.ManyToManyField(
                        related_name="WorkspaceShortcuts",
                        to="frappe_app.workspaceshortcut",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkflowTransition",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "allow_self_approval",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                ("condition", models.CharField(blank=True, max_length=255, null=True)),
                ("example", models.TextField(blank=True, null=True)),
                (
                    "workflow_builder_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "action",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowTransitionAction",
                        to="frappe_app.workflowactionmaster",
                    ),
                ),
                (
                    "allowed",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowTransitionAllowed",
                        to="frappe_app.role",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "next_state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowTransitionNextState",
                        to="frappe_app.workflowstate",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowTransitionState",
                        to="frappe_app.workflowstate",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkflowDocumentState",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "doc_status",
                    models.CharField(
                        blank=True,
                        choices=[("0", "0"), ("1", "1"), ("2", "2")],
                        default="0",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "update_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "update_value",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("message", models.TextField(blank=True, null=True)),
                (
                    "is_optional_state",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "workflow_builder_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "avoid_status_override",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_edit",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowDocumentStateAllowEdit",
                        to="frappe_app.role",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "next_action_email_template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowDocumentStateNextActionEmailTemplate",
                        to="frappe_app.emailtemplate",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowDocumentStateState",
                        to="frappe_app.workflowstate",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkflowActionPermittedRole",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowActionPermittedRoleRole",
                        to="frappe_app.role",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WorkflowAction",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[("Open", "Open"), ("Completed", "Completed")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "reference_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "workflow_state",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "completed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowActionCompletedBy",
                        to="frappe_app.user",
                    ),
                ),
                (
                    "completed_by_role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowActionCompletedByRole",
                        to="frappe_app.role",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "permitted_roles",
                    models.ManyToManyField(
                        related_name="WorkflowActionPermittedRoles",
                        to="frappe_app.workflowactionpermittedrole",
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowActionReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowActionUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Workflow",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "workflow_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_active", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "override_status",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "send_email_alert",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "workflow_state_field",
                    models.CharField(
                        blank=True, default="workflow_state", max_length=255, null=True
                    ),
                ),
                ("workflow_data", models.JSONField(blank=True, null=True)),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WorkflowDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "states",
                    models.ManyToManyField(
                        related_name="WorkflowStates",
                        to="frappe_app.workflowdocumentstate",
                    ),
                ),
                (
                    "transitions",
                    models.ManyToManyField(
                        related_name="WorkflowTransitions",
                        to="frappe_app.workflowtransition",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebTemplateField",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                ("fieldname", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fieldtype",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Attach Image", "Attach Image"),
                            ("Check", "Check"),
                            ("Data", "Data"),
                            ("Int", "Int"),
                            ("Link", "Link"),
                            ("Select", "Select"),
                            ("Small Text", "Small Text"),
                            ("Text", "Text"),
                            ("Markdown Editor", "Markdown Editor"),
                            ("Section Break", "Section Break"),
                            ("Column Break", "Column Break"),
                            ("Table Break", "Table Break"),
                        ],
                        default="Data",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("reqd", models.BooleanField(blank=True, default="0", null=True)),
                ("options", models.TextField(blank=True, null=True)),
                ("default", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebTemplate",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("template", models.CharField(blank=True, max_length=255, null=True)),
                ("standard", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Component", "Component"),
                            ("Section", "Section"),
                            ("Navbar", "Navbar"),
                            ("Footer", "Footer"),
                        ],
                        default="Section",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "fields",
                    models.ManyToManyField(
                        related_name="WebTemplateFields",
                        to="frappe_app.webtemplatefield",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebTemplateModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebsiteThemeIgnoreApp",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("app", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebsiteTheme",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("theme", models.CharField(blank=True, max_length=255, null=True)),
                ("custom", models.BooleanField(blank=True, default="1", null=True)),
                ("theme_scss", models.CharField(blank=True, max_length=255, null=True)),
                ("theme_url", models.CharField(blank=True, max_length=255, null=True)),
                ("js", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "google_font",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("font_size", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "custom_scss",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "font_properties",
                    models.CharField(
                        blank=True,
                        default="wght@300;400;500;600;700;800",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "button_rounded_corners",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "button_shadows",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "button_gradients",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "custom_overrides",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "background_color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebsiteThemeBackgroundColor",
                        to="frappe_app.color",
                    ),
                ),
                (
                    "dark_color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebsiteThemeDarkColor",
                        to="frappe_app.color",
                    ),
                ),
                (
                    "ignored_apps",
                    models.ManyToManyField(
                        related_name="WebsiteThemeIgnoredApps",
                        to="frappe_app.websitethemeignoreapp",
                    ),
                ),
                (
                    "light_color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebsiteThemeLightColor",
                        to="frappe_app.color",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        default="Website",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebsiteThemeModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "primary_color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebsiteThemePrimaryColor",
                        to="frappe_app.color",
                    ),
                ),
                (
                    "text_color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebsiteThemeTextColor",
                        to="frappe_app.color",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebsiteSlideshowItem",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("image", models.CharField(blank=True, max_length=255, null=True)),
                ("heading", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebsiteSlideshow",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "slideshow_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("header", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "slideshow_items",
                    models.ManyToManyField(
                        related_name="WebsiteSlideshowSlideshowItems",
                        to="frappe_app.websiteslideshowitem",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebsiteSidebarItem",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                ("group", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebsiteSidebar",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sidebar_items",
                    models.ManyToManyField(
                        related_name="WebsiteSidebarSidebarItems",
                        to="frappe_app.websitesidebaritem",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebsiteSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("home_page", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "title_prefix",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "website_theme_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "website_theme_image_link",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "banner_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("brand_html", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "set_banner_from_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "navbar_search",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "banner_html",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("copyright", models.CharField(blank=True, max_length=255, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "hide_footer_signup",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "google_analytics_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("favicon", models.CharField(blank=True, max_length=255, null=True)),
                ("subdomain", models.TextField(blank=True, null=True)),
                (
                    "disable_signup",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                ("head_html", models.CharField(blank=True, max_length=255, null=True)),
                ("robots_txt", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "enable_google_indexing",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "indexing_refresh_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "indexing_authorization_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "authorize_api_indexing_access",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "enable_view_tracking",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "footer_logo",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "call_to_action",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "call_to_action_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("hide_login", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "navbar_template_values",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "edit_navbar_template_values",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "footer_template_values",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "edit_footer_template_values",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "google_analytics_anonymize_ip",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "show_language_picker",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "app_name",
                    models.CharField(
                        blank=True, default="Frappe", max_length=255, null=True
                    ),
                ),
                ("app_logo", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "show_account_deletion_link",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "auto_account_deletion",
                    models.IntegerField(blank=True, default="72", null=True),
                ),
                ("footer_powered", models.TextField(blank=True, null=True)),
                (
                    "splash_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "show_footer_on_login",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "footer_items",
                    models.ManyToManyField(
                        related_name="WebsiteSettingsFooterItems",
                        to="frappe_app.topbaritem",
                    ),
                ),
                (
                    "footer_template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebsiteSettingsFooterTemplate",
                        to="frappe_app.webtemplate",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "navbar_template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebsiteSettingsNavbarTemplate",
                        to="frappe_app.webtemplate",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "route_redirects",
                    models.ManyToManyField(
                        related_name="WebsiteSettingsRouteRedirects",
                        to="frappe_app.websiterouteredirect",
                    ),
                ),
                (
                    "top_bar_items",
                    models.ManyToManyField(
                        related_name="WebsiteSettingsTopBarItems",
                        to="frappe_app.topbaritem",
                    ),
                ),
                (
                    "website_theme",
                    models.ForeignKey(
                        blank=True,
                        default="Standard",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebsiteSettingsWebsiteTheme",
                        to="frappe_app.websitetheme",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebsiteScript",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("javascript", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebsiteRouteMeta",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "meta_tags",
                    models.ManyToManyField(
                        related_name="WebsiteRouteMetaMetaTags",
                        to="frappe_app.websitemetatag",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebPageView",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("path", models.CharField(blank=True, max_length=255, null=True)),
                ("referrer", models.CharField(blank=True, max_length=255, null=True)),
                ("browser", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "browser_version",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("is_unique", models.CharField(blank=True, max_length=255, null=True)),
                ("time_zone", models.CharField(blank=True, max_length=255, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=255, null=True)),
                ("visitor_id", models.CharField(blank=True, max_length=255, null=True)),
                ("source", models.CharField(blank=True, max_length=255, null=True)),
                ("campaign", models.CharField(blank=True, max_length=255, null=True)),
                ("medium", models.CharField(blank=True, max_length=255, null=True)),
                ("content", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebPageBlock",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "edit_values",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "web_template_values",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("css_class", models.TextField(blank=True, null=True)),
                ("add_shade", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "add_container",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                ("hide_block", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "add_top_padding",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "add_bottom_padding",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "add_border_at_top",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "add_border_at_bottom",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "add_background_image",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "background_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("section_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "web_template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebPageBlockWebTemplate",
                        to="frappe_app.webtemplate",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebPage",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                ("published", models.BooleanField(blank=True, default="1", null=True)),
                ("show_title", models.BooleanField(blank=True, default="0", null=True)),
                ("start_date", models.DateTimeField(blank=True, null=True)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "content_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Rich Text", "Rich Text"),
                            ("Markdown", "Markdown"),
                            ("HTML", "HTML"),
                            ("Page Builder", "Page Builder"),
                            ("Slideshow", "Slideshow"),
                        ],
                        default="Page Builder",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "main_section",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("main_section_md", models.TextField(blank=True, null=True)),
                ("main_section_html", models.TextField(blank=True, null=True)),
                ("javascript", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "insert_style",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "text_align",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Left", "Left"),
                            ("Center", "Center"),
                            ("Right", "Right"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("css", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "show_sidebar",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "enable_comments",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("idx", models.IntegerField(blank=True, null=True)),
                ("header", models.TextField(blank=True, null=True)),
                (
                    "breadcrumbs",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "set_meta_tags",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dynamic_template",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("full_width", models.BooleanField(blank=True, default="1", null=True)),
                ("meta_title", models.CharField(blank=True, max_length=255, null=True)),
                ("meta_description", models.TextField(blank=True, null=True)),
                ("meta_image", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "dynamic_route",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "context_script",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebPageModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "page_blocks",
                    models.ManyToManyField(
                        related_name="WebPagePageBlocks", to="frappe_app.webpageblock"
                    ),
                ),
                (
                    "slideshow",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebPageSlideshow",
                        to="frappe_app.websiteslideshow",
                    ),
                ),
                (
                    "website_sidebar",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebPageWebsiteSidebar",
                        to="frappe_app.websitesidebar",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebhookRequestLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("url", models.TextField(blank=True, null=True)),
                ("headers", models.CharField(blank=True, max_length=255, null=True)),
                ("response", models.CharField(blank=True, max_length=255, null=True)),
                ("data", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "reference_document",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("error", models.TextField(blank=True, null=True)),
                (
                    "reference_doctype",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebhookRequestLogUser",
                        to="frappe_app.user",
                    ),
                ),
                (
                    "webhook",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebhookRequestLogWebhook",
                        to="frappe_app.webhook",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebhookHeader",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("key", models.TextField(blank=True, null=True)),
                ("value", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebhookData",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "fieldname",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("key", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="webhook",
            name="webhook_data",
            field=models.ManyToManyField(
                related_name="WebhookWebhookData", to="frappe_app.webhookdata"
            ),
        ),
        migrations.AddField(
            model_name="webhook",
            name="webhook_doctype",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="WebhookWebhookDoctype",
                to="frappe_app.doctype",
            ),
        ),
        migrations.AddField(
            model_name="webhook",
            name="webhook_headers",
            field=models.ManyToManyField(
                related_name="WebhookWebhookHeaders", to="frappe_app.webhookheader"
            ),
        ),
        migrations.CreateModel(
            name="WebFormListColumn",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "fieldname",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                ("fieldtype", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebFormField",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "fieldname",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "fieldtype",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Attach", "Attach"),
                            ("Attach Image", "Attach Image"),
                            ("Check", "Check"),
                            ("Currency", "Currency"),
                            ("Color", "Color"),
                            ("Data", "Data"),
                            ("Date", "Date"),
                            ("Datetime", "Datetime"),
                            ("Duration", "Duration"),
                            ("Float", "Float"),
                            ("HTML", "HTML"),
                            ("Int", "Int"),
                            ("Link", "Link"),
                            ("Password", "Password"),
                            ("Phone", "Phone"),
                            ("Rating", "Rating"),
                            ("Select", "Select"),
                            ("Signature", "Signature"),
                            ("Small Text", "Small Text"),
                            ("Text", "Text"),
                            ("Text Editor", "Text Editor"),
                            ("Table", "Table"),
                            ("Time", "Time"),
                            ("Section Break", "Section Break"),
                            ("Column Break", "Column Break"),
                            ("Page Break", "Page Break"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "allow_read_on_all_link_options",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("reqd", models.BooleanField(blank=True, default="0", null=True)),
                ("depends_on", models.CharField(blank=True, max_length=255, null=True)),
                ("read_only", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "show_in_filter",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("hidden", models.BooleanField(blank=True, default="0", null=True)),
                ("options", models.TextField(blank=True, null=True)),
                ("max_length", models.IntegerField(blank=True, null=True)),
                ("max_value", models.IntegerField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("default", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "mandatory_depends_on",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "read_only_depends_on",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "precision",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "0"),
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                            ("7", "7"),
                            ("8", "8"),
                            ("9", "9"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="WebForm",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "is_standard",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("published", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "login_required",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("allow_edit", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "allow_multiple",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_delete",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_print",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_comments",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "show_attachments",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_incomplete",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "introduction_text",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("max_attachment_size", models.IntegerField(blank=True, null=True)),
                (
                    "client_script",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "button_label",
                    models.CharField(
                        blank=True, default="Save", max_length=255, null=True
                    ),
                ),
                ("success_message", models.TextField(blank=True, null=True)),
                (
                    "success_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "show_sidebar",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "breadcrumbs",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("custom_css", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "apply_document_permissions",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("show_list", models.BooleanField(blank=True, default="0", null=True)),
                ("list_title", models.CharField(blank=True, max_length=255, null=True)),
                ("list_setting_message", models.TextField(blank=True, null=True)),
                (
                    "success_title",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "banner_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("meta_title", models.CharField(blank=True, max_length=255, null=True)),
                ("meta_description", models.TextField(blank=True, null=True)),
                ("meta_image", models.CharField(blank=True, max_length=255, null=True)),
                ("anonymous", models.BooleanField(blank=True, default="0", null=True)),
                ("condition_description", models.TextField(blank=True, null=True)),
                ("condition_json", models.JSONField(blank=True, null=True)),
                (
                    "hide_navbar",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "hide_footer",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("allowed_embedding_domains", models.TextField(blank=True, null=True)),
                (
                    "doc_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebFormDocType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "list_columns",
                    models.ManyToManyField(
                        related_name="WebFormListColumns",
                        to="frappe_app.webformlistcolumn",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebFormModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "print_format",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebFormPrintFormat",
                        to="frappe_app.printformat",
                    ),
                ),
                (
                    "web_form_fields",
                    models.ManyToManyField(
                        related_name="WebFormWebFormFields",
                        to="frappe_app.webformfield",
                    ),
                ),
                (
                    "website_sidebar",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="WebFormWebsiteSidebar",
                        to="frappe_app.websitesidebar",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ViewLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("viewed_by", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "reference_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ViewLogReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Version",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("docname", models.CharField(blank=True, max_length=255, null=True)),
                ("data", models.CharField(blank=True, max_length=255, null=True)),
                ("table_html", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ref_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="VersionRefDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UTMSource",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("slug", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UTMMedium",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("slug", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UTMCampaign",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("campaign_description", models.TextField(blank=True, null=True)),
                ("slug", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserTypeModule",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserTypeModuleModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserType",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "is_standard",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "user_id_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "apply_user_permission_on",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserTypeApplyUserPermissionOn",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "custom_select_doctypes",
                    models.ManyToManyField(
                        related_name="UserTypeCustomSelectDoctypes",
                        to="frappe_app.userselectdocumenttype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserTypeRole",
                        to="frappe_app.role",
                    ),
                ),
                (
                    "select_doctypes",
                    models.ManyToManyField(
                        related_name="UserTypeSelectDoctypes",
                        to="frappe_app.userselectdocumenttype",
                    ),
                ),
                (
                    "user_doctypes",
                    models.ManyToManyField(
                        related_name="UserTypeUserDoctypes",
                        to="frappe_app.userdocumenttype",
                    ),
                ),
                (
                    "user_type_modules",
                    models.ManyToManyField(
                        related_name="UserTypeUserTypeModules",
                        to="frappe_app.usertypemodule",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserSocialLogin",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("provider", models.CharField(blank=True, max_length=255, null=True)),
                ("username", models.CharField(blank=True, max_length=255, null=True)),
                ("userid", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserRoleProfile",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role_profile",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserRoleProfileRoleProfile",
                        to="frappe_app.roleprofile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserPermission",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("for_value", models.CharField(blank=True, max_length=255, null=True)),
                ("is_default", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "apply_to_all_doctypes",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "hide_descendants",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserPermissionAllow",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "applicable_for",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserPermissionApplicableFor",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserPermissionUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserGroupMember",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserGroupMemberUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserGroup",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_group_members",
                    models.ManyToManyField(
                        related_name="UserGroupUserGroupMembers",
                        to="frappe_app.usergroupmember",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UserEmail",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("email_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "awaiting_password",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "enable_outgoing",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("used_oauth", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "email_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UserEmailEmailAccount",
                        to="frappe_app.emailaccount",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="user",
            name="default_workspace",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="UserDefaultWorkspace",
                to="frappe_app.workspace",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="defaults",
            field=models.ManyToManyField(
                related_name="UserDefaults", to="frappe_app.defaultvalue"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="gender",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="UserGender",
                to="frappe_app.gender",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="language",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="UserLanguage",
                to="frappe_app.language",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="module_profile",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="UserModuleProfile",
                to="frappe_app.moduleprofile",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="role_profile_name",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="UserRoleProfileName",
                to="frappe_app.roleprofile",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="role_profiles",
            field=models.ManyToManyField(
                related_name="UserRoleProfiles", to="frappe_app.userroleprofile"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="roles",
            field=models.ManyToManyField(
                related_name="UserRoles", to="frappe_app.hasrole"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="social_logins",
            field=models.ManyToManyField(
                related_name="UserSocialLogins", to="frappe_app.usersociallogin"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_emails",
            field=models.ManyToManyField(
                related_name="UserUserEmails", to="frappe_app.useremail"
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_type",
            field=models.ForeignKey(
                blank=True,
                default="System User",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="UserUserType",
                to="frappe_app.usertype",
            ),
        ),
        migrations.CreateModel(
            name="UnhandledEmail",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("uid", models.CharField(blank=True, max_length=255, null=True)),
                ("reason", models.TextField(blank=True, null=True)),
                ("message_id", models.CharField(blank=True, max_length=255, null=True)),
                ("raw", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "email_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="UnhandledEmailEmailAccount",
                        to="frappe_app.emailaccount",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Translation",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("context", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "contributed",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "contribution_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Pending", "Pending"),
                            ("Verified", "Verified"),
                            ("Rejected", "Rejected"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "contribution_docname",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "source_text",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "translated_text",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="TranslationLanguage",
                        to="frappe_app.language",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TransactionLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("row_index", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "reference_doctype",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "document_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                (
                    "checksum_version",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("previous_hash", models.TextField(blank=True, null=True)),
                ("transaction_hash", models.TextField(blank=True, null=True)),
                ("chaining_hash", models.TextField(blank=True, null=True)),
                ("data", models.TextField(blank=True, null=True)),
                (
                    "amended_from",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="TransactionLogAmendedFrom",
                        to="frappe_app.transactionlog",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TokenCache",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "access_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "refresh_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("expires_in", models.IntegerField(blank=True, null=True)),
                ("state", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "success_uri",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("token_type", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "provider_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "connected_app",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="TokenCacheConnectedApp",
                        to="frappe_app.connectedapp",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "scopes",
                    models.ManyToManyField(
                        related_name="TokenCacheScopes", to="frappe_app.oauthscope"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="TokenCacheUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ToDo",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Open", "Open"),
                            ("Closed", "Closed"),
                            ("Cancelled", "Cancelled"),
                        ],
                        default="Open",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("High", "High"),
                            ("Medium", "Medium"),
                            ("Low", "Low"),
                        ],
                        default="Medium",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=255, null=True)),
                ("date", models.DateField(blank=True, default="Today", null=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "reference_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "assigned_by_full_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("sender", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "allocated_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ToDoAllocatedTo",
                        to="frappe_app.user",
                    ),
                ),
                (
                    "assigned_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ToDoAssignedBy",
                        to="frappe_app.user",
                    ),
                ),
                (
                    "assignment_rule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ToDoAssignmentRule",
                        to="frappe_app.assignmentrule",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ToDoReferenceType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ToDoRole",
                        to="frappe_app.role",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="TagLink",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "document_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="TagLinkDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="TagLinkTag",
                        to="frappe_app.tag",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SystemSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "time_zone",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "setup_complete",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "date_format",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("yyyy-mm-dd", "yyyy-mm-dd"),
                            ("dd-mm-yyyy", "dd-mm-yyyy"),
                            ("dd/mm/yyyy", "dd/mm/yyyy"),
                            ("dd.mm.yyyy", "dd.mm.yyyy"),
                            ("mm/dd/yyyy", "mm/dd/yyyy"),
                            ("mm-dd-yyyy", "mm-dd-yyyy"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "time_format",
                    models.CharField(
                        blank=True,
                        choices=[("HH:mm:ss", "HH:mm:ss"), ("HH:mm", "HH:mm")],
                        default="HH:mm:ss",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "number_format",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("#,###.##", "#,###.##"),
                            ("#.###,##", "#.###,##"),
                            ("# ###.##", "# ###.##"),
                            ("# ###,##", "# ###,##"),
                            ("#'###.##", "#'###.##"),
                            ("#, ###.##", "#, ###.##"),
                            ("#,##,###.##", "#,##,###.##"),
                            ("#,###.###", "#,###.###"),
                            ("#.###", "#.###"),
                            ("#,###", "#,###"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "float_precision",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                            ("7", "7"),
                            ("8", "8"),
                            ("9", "9"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "currency_precision",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "0"),
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                            ("7", "7"),
                            ("8", "8"),
                            ("9", "9"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "backup_limit",
                    models.IntegerField(blank=True, default="3", null=True),
                ),
                (
                    "enable_scheduler",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "apply_strict_user_permissions",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "session_expiry",
                    models.CharField(
                        blank=True, default="170:00", max_length=255, null=True
                    ),
                ),
                (
                    "deny_multiple_sessions",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_login_using_mobile_number",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_login_using_user_name",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_error_traceback",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "force_user_to_reset_password",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "enable_password_policy",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "minimum_password_score",
                    models.CharField(
                        blank=True,
                        choices=[("2", "2"), ("3", "3"), ("4", "4")],
                        default="2",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "allow_consecutive_login_attempts",
                    models.IntegerField(blank=True, default="10", null=True),
                ),
                (
                    "allow_login_after_fail",
                    models.IntegerField(blank=True, default="60", null=True),
                ),
                (
                    "enable_two_factor_auth",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "bypass_2fa_for_retricted_ip_users",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "bypass_restrict_ip_check_if_2fa_enabled",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "two_factor_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("OTP App", "OTP App"),
                            ("SMS", "SMS"),
                            ("Email", "Email"),
                        ],
                        default="OTP App",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("lifespan_qrcode_image", models.IntegerField(blank=True, null=True)),
                (
                    "otp_issuer_name",
                    models.CharField(
                        blank=True,
                        default="Frappe Framework",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("email_footer_address", models.TextField(blank=True, null=True)),
                (
                    "disable_standard_email_footer",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "hide_footer_in_auto_email_reports",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_guests_to_upload_files",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "dormant_days",
                    models.IntegerField(blank=True, default="4", null=True),
                ),
                (
                    "password_reset_limit",
                    models.IntegerField(blank=True, default="3", null=True),
                ),
                (
                    "logout_on_password_reset",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "enable_onboarding",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "attach_view_link",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "app_name",
                    models.CharField(
                        blank=True, default="Frappe", max_length=255, null=True
                    ),
                ),
                (
                    "strip_exif_metadata_from_uploaded_images",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "encrypt_backup",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "disable_system_update_notification",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "first_day_of_the_week",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Sunday", "Sunday"),
                            ("Monday", "Monday"),
                            ("Tuesday", "Tuesday"),
                            ("Wednesday", "Wednesday"),
                            ("Thursday", "Thursday"),
                            ("Friday", "Friday"),
                            ("Saturday", "Saturday"),
                        ],
                        default="Sunday",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "document_share_key_expiry",
                    models.IntegerField(blank=True, default="30", null=True),
                ),
                (
                    "allow_older_web_view_links",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "max_auto_email_report_per_user",
                    models.IntegerField(blank=True, default="20", null=True),
                ),
                (
                    "disable_change_log_notification",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "reset_password_link_expiry_duration",
                    models.DurationField(blank=True, default="1200", null=True),
                ),
                (
                    "email_retry_limit",
                    models.IntegerField(blank=True, default="3", null=True),
                ),
                (
                    "disable_user_pass_login",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "login_with_email_link",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "login_with_email_link_expiry",
                    models.IntegerField(blank=True, default="10", null=True),
                ),
                (
                    "rounding_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "Banker's Rounding (legacy)",
                                "Banker's Rounding (legacy)",
                            ),
                            ("Banker's Rounding", "Banker's Rounding"),
                            ("Commercial Rounding", "Commercial Rounding"),
                        ],
                        default="Banker's Rounding (legacy)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "disable_document_sharing",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "enable_telemetry",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "force_web_capture_mode_for_uploads",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("max_file_size", models.IntegerField(blank=True, null=True)),
                ("allowed_file_extensions", models.TextField(blank=True, null=True)),
                (
                    "link_field_results_limit",
                    models.IntegerField(blank=True, default="10", null=True),
                ),
                (
                    "store_attached_pdf_document",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "default_app",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "rate_limit_email_link_login",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "use_number_format_from_currency",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "hide_empty_read_only_fields",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SystemSettingsCountry",
                        to="frappe_app.country",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SystemSettingsCurrency",
                        to="frappe_app.currency",
                    ),
                ),
                (
                    "language",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SystemSettingsLanguage",
                        to="frappe_app.language",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reset_password_template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SystemSettingsResetPasswordTemplate",
                        to="frappe_app.emailtemplate",
                    ),
                ),
                (
                    "welcome_email_template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SystemSettingsWelcomeEmailTemplate",
                        to="frappe_app.emailtemplate",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SystemHealthReportWorkers",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("queues", models.CharField(blank=True, max_length=255, null=True)),
                ("count", models.IntegerField(blank=True, null=True)),
                (
                    "utilization",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("failed_jobs", models.IntegerField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SystemHealthReportTables",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("table", models.CharField(blank=True, max_length=255, null=True)),
                ("size", models.FloatField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SystemHealthReportQueue",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("queue", models.CharField(blank=True, max_length=255, null=True)),
                ("pending_jobs", models.IntegerField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SystemHealthReportFailingJobs",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "failure_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "scheduled_job_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SystemHealthReportFailingJobsScheduledJobType",
                        to="frappe_app.scheduledjobtype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SystemHealthReportErrors",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("occurrences", models.IntegerField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SystemHealthReport",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "total_background_workers",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "scheduler_status",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "socketio_ping_check",
                    models.CharField(
                        blank=True,
                        choices=[("Fail", "Fail"), ("Pass", "Pass")],
                        default="Fail",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "socketio_transport_mode",
                    models.CharField(
                        blank=True,
                        choices=[("Polling", "Polling"), ("Websocket", "Websocket")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("failed_emails", models.IntegerField(blank=True, null=True)),
                ("total_outgoing_emails", models.IntegerField(blank=True, null=True)),
                ("pending_emails", models.IntegerField(blank=True, null=True)),
                ("unhandled_emails", models.IntegerField(blank=True, null=True)),
                ("handled_emails", models.IntegerField(blank=True, null=True)),
                ("total_errors", models.IntegerField(blank=True, null=True)),
                ("database", models.CharField(blank=True, max_length=255, null=True)),
                ("db_storage_usage", models.FloatField(blank=True, null=True)),
                (
                    "database_version",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "bufferpool_size",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "binary_logging",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("cache_keys", models.IntegerField(blank=True, null=True)),
                (
                    "cache_memory_usage",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("backups_size", models.FloatField(blank=True, null=True)),
                ("private_files_size", models.FloatField(blank=True, null=True)),
                ("public_files_size", models.FloatField(blank=True, null=True)),
                ("onsite_backups", models.IntegerField(blank=True, null=True)),
                ("total_users", models.IntegerField(blank=True, null=True)),
                ("new_users", models.IntegerField(blank=True, null=True)),
                ("failed_logins", models.IntegerField(blank=True, null=True)),
                ("active_sessions", models.IntegerField(blank=True, null=True)),
                (
                    "last_10_active_users",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "background_jobs_check",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "test_job_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "background_workers",
                    models.ManyToManyField(
                        related_name="SystemHealthReportBackgroundWorkers",
                        to="frappe_app.systemhealthreportworkers",
                    ),
                ),
                (
                    "failing_scheduled_jobs",
                    models.ManyToManyField(
                        related_name="SystemHealthReportFailingScheduledJobs",
                        to="frappe_app.systemhealthreportfailingjobs",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "oldest_unscheduled_job",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SystemHealthReportOldestUnscheduledJob",
                        to="frappe_app.scheduledjobtype",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "queue_status",
                    models.ManyToManyField(
                        related_name="SystemHealthReportQueueStatus",
                        to="frappe_app.systemhealthreportqueue",
                    ),
                ),
                (
                    "top_db_tables",
                    models.ManyToManyField(
                        related_name="SystemHealthReportTopDbTables",
                        to="frappe_app.systemhealthreporttables",
                    ),
                ),
                (
                    "top_errors",
                    models.ManyToManyField(
                        related_name="SystemHealthReportTopErrors",
                        to="frappe_app.systemhealthreporterrors",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SystemConsole",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("console", models.CharField(blank=True, max_length=255, null=True)),
                ("output", models.CharField(blank=True, max_length=255, null=True)),
                ("commit", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "show_processlist",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("processlist", models.TextField(blank=True, null=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[("Python", "Python"), ("SQL", "SQL")],
                        default="Python",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("sql_output", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SuccessAction",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "first_success_message",
                    models.CharField(
                        blank=True,
                        default="Congratulations on first creations",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "message",
                    models.CharField(
                        blank=True,
                        default="Successfully created",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("next_actions_html", models.TextField(blank=True, null=True)),
                (
                    "next_actions",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "action_timeout",
                    models.IntegerField(blank=True, default="7", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ref_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SuccessActionRefDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SubmissionQueue",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "ref_docname",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Queued", "Queued"),
                            ("Finished", "Finished"),
                            ("Failed", "Failed"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "enqueued_by",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("exception", models.TextField(blank=True, null=True)),
                (
                    "job_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SubmissionQueueJobId",
                        to="frappe_app.rqjob",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ref_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SubmissionQueueRefDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SocialLoginKeys",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SocialLoginKey",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "enable_social_login",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "social_login_provider",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Custom", "Custom"),
                            ("Facebook", "Facebook"),
                            ("Frappe", "Frappe"),
                            ("GitHub", "GitHub"),
                            ("Google", "Google"),
                            ("Office 365", "Office 365"),
                            ("Salesforce", "Salesforce"),
                            ("fairlogin", "fairlogin"),
                            ("Keycloak", "Keycloak"),
                        ],
                        default="Custom",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("client_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "provider_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "client_secret",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("icon", models.CharField(blank=True, max_length=255, null=True)),
                ("base_url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "authorize_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "access_token_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "redirect_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "api_endpoint",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "custom_base_url",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "api_endpoint_args",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "auth_url_data",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "user_id_property",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sign_ups",
                    models.CharField(
                        blank=True,
                        choices=[("Allow", "Allow"), ("Deny", "Deny")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SocialLinkSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "social_link_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("facebook", "facebook"),
                            ("linkedin", "linkedin"),
                            ("twitter", "twitter"),
                            ("email", "email"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "background_color",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SMSSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("sms_gateway_url", models.TextField(blank=True, null=True)),
                (
                    "message_parameter",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "receiver_parameter",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("use_post", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parameters",
                    models.ManyToManyField(
                        related_name="SMSSettingsParameters",
                        to="frappe_app.smsparameter",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SMSLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "sender_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("sent_on", models.DateField(blank=True, null=True)),
                ("message", models.TextField(blank=True, null=True)),
                ("no_of_requested_sms", models.IntegerField(blank=True, null=True)),
                (
                    "requested_numbers",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("no_of_sent_sms", models.IntegerField(blank=True, null=True)),
                ("sent_to", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SlackWebhookURL",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "webhook_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "webhook_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "show_document_link",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SessionDefaultSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "session_defaults",
                    models.ManyToManyField(
                        related_name="SessionDefaultSettingsSessionDefaults",
                        to="frappe_app.sessiondefault",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServerScript",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "script_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DocType Event", "DocType Event"),
                            ("Scheduler Event", "Scheduler Event"),
                            ("Permission Query", "Permission Query"),
                            ("API", "API"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("script", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "doctype_event",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Before Insert", "Before Insert"),
                            ("Before Validate", "Before Validate"),
                            ("Before Save", "Before Save"),
                            ("After Insert", "After Insert"),
                            ("After Save", "After Save"),
                            ("Before Rename", "Before Rename"),
                            ("After Rename", "After Rename"),
                            ("Before Submit", "Before Submit"),
                            ("After Submit", "After Submit"),
                            ("Before Cancel", "Before Cancel"),
                            ("After Cancel", "After Cancel"),
                            ("Before Discard", "Before Discard"),
                            ("After Discard", "After Discard"),
                            ("Before Delete", "Before Delete"),
                            ("After Delete", "After Delete"),
                            (
                                "Before Save (Submitted Document)",
                                "Before Save (Submitted Document)",
                            ),
                            (
                                "After Save (Submitted Document)",
                                "After Save (Submitted Document)",
                            ),
                            ("Before Print", "Before Print"),
                            ("On Payment Authorization", "On Payment Authorization"),
                            ("On Payment Paid", "On Payment Paid"),
                            ("On Payment Failed", "On Payment Failed"),
                            (
                                "On Payment Charge Processed",
                                "On Payment Charge Processed",
                            ),
                            (
                                "On Payment Mandate Charge Processed",
                                "On Payment Mandate Charge Processed",
                            ),
                            (
                                "On Payment Mandate Acquisition Processed",
                                "On Payment Mandate Acquisition Processed",
                            ),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("api_method", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "allow_guest",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("disabled", models.BooleanField(blank=True, default="0", null=True)),
                ("help_html", models.TextField(blank=True, null=True)),
                (
                    "event_frequency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("All", "All"),
                            ("Hourly", "Hourly"),
                            ("Daily", "Daily"),
                            ("Weekly", "Weekly"),
                            ("Monthly", "Monthly"),
                            ("Yearly", "Yearly"),
                            ("Hourly Long", "Hourly Long"),
                            ("Daily Long", "Daily Long"),
                            ("Weekly Long", "Weekly Long"),
                            ("Monthly Long", "Monthly Long"),
                            ("Cron", "Cron"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "enable_rate_limit",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "rate_limit_count",
                    models.IntegerField(blank=True, default="5", null=True),
                ),
                (
                    "rate_limit_seconds",
                    models.IntegerField(blank=True, default="86400", null=True),
                ),
                (
                    "cron_format",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ServerScriptModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ServerScriptReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SchedulerEvent",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("method", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "scheduled_against",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="SchedulerEventScheduledAgainst",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="scheduledjobtype",
            name="scheduler_event",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ScheduledJobTypeSchedulerEvent",
                to="frappe_app.schedulerevent",
            ),
        ),
        migrations.AddField(
            model_name="scheduledjobtype",
            name="server_script",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ScheduledJobTypeServerScript",
                to="frappe_app.serverscript",
            ),
        ),
        migrations.CreateModel(
            name="ScheduledJobLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Scheduled", "Scheduled"),
                            ("Complete", "Complete"),
                            ("Failed", "Failed"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("details", models.CharField(blank=True, max_length=255, null=True)),
                ("debug_log", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "scheduled_job_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ScheduledJobLogScheduledJobType",
                        to="frappe_app.scheduledjobtype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Salutation",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("salutation", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="S3BackupSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enabled", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "notify_email",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "send_email_for_successful_backup",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "frequency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Daily", "Daily"),
                            ("Weekly", "Weekly"),
                            ("Monthly", "Monthly"),
                            ("None", "None"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "access_key_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "secret_access_key",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "endpoint_url",
                    models.CharField(
                        blank=True,
                        default="https://s3.amazonaws.com",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("bucket", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "backup_files",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RQWorker",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "worker_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("status", models.CharField(blank=True, max_length=255, null=True)),
                ("pid", models.CharField(blank=True, max_length=255, null=True)),
                ("last_heartbeat", models.DateTimeField(blank=True, null=True)),
                ("birth_date", models.DateTimeField(blank=True, null=True)),
                ("successful_job_count", models.IntegerField(blank=True, null=True)),
                ("failed_job_count", models.IntegerField(blank=True, null=True)),
                ("total_working_time", models.DurationField(blank=True, null=True)),
                ("queue", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "queue_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("default", "default"),
                            ("long", "long"),
                            ("short", "short"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "utilization_percent",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "current_job_id",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="RQWorkerCurrentJobId",
                        to="frappe_app.rqjob",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RouteHistory",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="RouteHistoryUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RoleReplication",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("new_role", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "existing_role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="RoleReplicationExistingRole",
                        to="frappe_app.role",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RolePermissionForPageAndReport",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "set_role_for",
                    models.CharField(
                        blank=True,
                        choices=[("Page", "Page"), ("Report", "Report")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("roles_html", models.TextField(blank=True, null=True)),
                (
                    "enable_prepared_report",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="RolePermissionForPageAndReportPage",
                        to="cms_app.page",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="RolePermissionForPageAndReportReport",
                        to="frappe_app.report",
                    ),
                ),
                (
                    "roles",
                    models.ManyToManyField(
                        related_name="RolePermissionForPageAndReportRoles",
                        to="frappe_app.hasrole",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReviewLevel",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("level_name", models.CharField(blank=True, max_length=255, null=True)),
                ("review_points", models.IntegerField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ReviewLevelRole",
                        to="frappe_app.role",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReportFilter",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("fieldname", models.CharField(blank=True, max_length=255, null=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fieldtype",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Check", "Check"),
                            ("Currency", "Currency"),
                            ("Data", "Data"),
                            ("Date", "Date"),
                            ("Datetime", "Datetime"),
                            ("Dynamic Link", "Dynamic Link"),
                            ("Float", "Float"),
                            ("Fold", "Fold"),
                            ("Int", "Int"),
                            ("Link", "Link"),
                            ("Select", "Select"),
                            ("Time", "Time"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("mandatory", models.BooleanField(blank=True, default="0", null=True)),
                ("options", models.TextField(blank=True, null=True)),
                (
                    "wildcard_filter",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("default", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ReportColumn",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("fieldname", models.CharField(blank=True, max_length=255, null=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fieldtype",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Check", "Check"),
                            ("Currency", "Currency"),
                            ("Data", "Data"),
                            ("Date", "Date"),
                            ("Datetime", "Datetime"),
                            ("Duration", "Duration"),
                            ("Dynamic Link", "Dynamic Link"),
                            ("Float", "Float"),
                            ("Fold", "Fold"),
                            ("Int", "Int"),
                            ("Link", "Link"),
                            ("Select", "Select"),
                            ("Time", "Time"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("options", models.CharField(blank=True, max_length=255, null=True)),
                ("width", models.IntegerField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="report",
            name="columns",
            field=models.ManyToManyField(
                related_name="ReportColumns", to="frappe_app.reportcolumn"
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="filters",
            field=models.ManyToManyField(
                related_name="ReportFilters", to="frappe_app.reportfilter"
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="letter_head",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ReportLetterHead",
                to="frappe_app.letterhead",
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="module",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ReportModule",
                to="frappe_app.moduledef",
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="ref_doctype",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ReportRefDoctype",
                to="frappe_app.doctype",
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="roles",
            field=models.ManyToManyField(
                related_name="ReportRoles", to="frappe_app.hasrole"
            ),
        ),
        migrations.CreateModel(
            name="Reminder",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "reminder_docname",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "remind_at",
                    models.DateTimeField(blank=True, default="now", null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("notified", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reminder_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ReminderReminderDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default="__user",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ReminderUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RecorderSuggestedIndex",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("table", models.CharField(blank=True, max_length=255, null=True)),
                ("column", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RecorderQuery",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("query", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "normalized_query",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("duration", models.FloatField(blank=True, null=True)),
                ("exact_copies", models.IntegerField(blank=True, null=True)),
                ("normalized_copies", models.IntegerField(blank=True, null=True)),
                ("stack", models.TextField(blank=True, null=True)),
                ("stack_html", models.TextField(blank=True, null=True)),
                ("explain_result", models.TextField(blank=True, null=True)),
                ("sql_explain_html", models.TextField(blank=True, null=True)),
                ("index", models.IntegerField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Recorder",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("path", models.CharField(blank=True, max_length=255, null=True)),
                ("cmd", models.CharField(blank=True, max_length=255, null=True)),
                ("duration", models.FloatField(blank=True, null=True)),
                ("time", models.DateTimeField(blank=True, null=True)),
                ("number_of_queries", models.IntegerField(blank=True, null=True)),
                ("time_in_queries", models.FloatField(blank=True, null=True)),
                (
                    "request_headers",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("form_dict", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("GET", "GET"),
                            ("POST", "POST"),
                            ("PUT", "PUT"),
                            ("DELETE", "DELETE"),
                            ("PATCH", "PATCH"),
                            ("HEAD", "HEAD"),
                            ("OPTIONS", "OPTIONS"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("event_type", models.CharField(blank=True, max_length=255, null=True)),
                ("profile", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "sql_queries",
                    models.ManyToManyField(
                        related_name="RecorderSqlQueries", to="frappe_app.recorderquery"
                    ),
                ),
                (
                    "suggested_indexes",
                    models.ManyToManyField(
                        related_name="RecorderSuggestedIndexes",
                        to="frappe_app.recordersuggestedindex",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="QueryParameters",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("key", models.CharField(blank=True, max_length=255, null=True)),
                ("value", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PushNotificationSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "enable_push_notification_relay",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("api_key", models.CharField(blank=True, max_length=255, null=True)),
                ("api_secret", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PropertySetter",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("help", models.TextField(blank=True, null=True)),
                (
                    "doctype_or_field",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DocField", "DocField"),
                            ("DocType", "DocType"),
                            ("DocType Link", "DocType Link"),
                            ("DocType Action", "DocType Action"),
                            ("DocType State", "DocType State"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("value", models.TextField(blank=True, null=True)),
                ("field_name", models.CharField(blank=True, max_length=255, null=True)),
                ("property", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "property_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "default_value",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("row_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "is_system_generated",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "doc_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PropertySetterDocType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PropertySetterModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PrintStyle",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "print_style_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("disabled", models.BooleanField(blank=True, default="0", null=True)),
                ("standard", models.BooleanField(blank=True, default="0", null=True)),
                ("css", models.CharField(blank=True, max_length=255, null=True)),
                ("preview", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PrintSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "send_print_as_pdf",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "repeat_header_footer",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "pdf_page_size",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("A0", "A0"),
                            ("A1", "A1"),
                            ("A2", "A2"),
                            ("A3", "A3"),
                            ("A4", "A4"),
                            ("A5", "A5"),
                            ("A6", "A6"),
                            ("A7", "A7"),
                            ("A8", "A8"),
                            ("A9", "A9"),
                            ("B0", "B0"),
                            ("B1", "B1"),
                            ("B2", "B2"),
                            ("B3", "B3"),
                            ("B4", "B4"),
                            ("B5", "B5"),
                            ("B6", "B6"),
                            ("B7", "B7"),
                            ("B8", "B8"),
                            ("B9", "B9"),
                            ("B10", "B10"),
                            ("C5E", "C5E"),
                            ("Comm10E", "Comm10E"),
                            ("DLE", "DLE"),
                            ("Executive", "Executive"),
                            ("Folio", "Folio"),
                            ("Ledger", "Ledger"),
                            ("Legal", "Legal"),
                            ("Letter", "Letter"),
                            ("Tabloid", "Tabloid"),
                            ("Custom", "Custom"),
                        ],
                        default="A4",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "with_letterhead",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "allow_print_for_draft",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "add_draft_heading",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "allow_page_break_inside_tables",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_print_for_cancelled",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "enable_print_server",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "enable_raw_printing",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("print_style_preview", models.TextField(blank=True, null=True)),
                (
                    "font",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Default", "Default"),
                            ("Helvetica Neue", "Helvetica Neue"),
                            ("Arial", "Arial"),
                            ("Helvetica", "Helvetica"),
                            ("Inter", "Inter"),
                            ("Verdana", "Verdana"),
                            ("Monospace", "Monospace"),
                        ],
                        default="Default",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("font_size", models.FloatField(blank=True, null=True)),
                ("pdf_page_height", models.FloatField(blank=True, null=True)),
                ("pdf_page_width", models.FloatField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "print_style",
                    models.ForeignKey(
                        blank=True,
                        default="Redesign",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PrintSettingsPrintStyle",
                        to="frappe_app.printstyle",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PrintHeading",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "print_heading",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PrintFormatFieldTemplate",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("field", models.CharField(blank=True, max_length=255, null=True)),
                ("template", models.CharField(blank=True, max_length=255, null=True)),
                ("standard", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "template_file",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PrintFormatFieldTemplateDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PrintFormatFieldTemplateModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PreparedReport",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "report_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Error", "Error"),
                            ("Queued", "Queued"),
                            ("Completed", "Completed"),
                            ("Started", "Started"),
                        ],
                        default="Queued",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("report_end_time", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("filters", models.TextField(blank=True, null=True)),
                ("filter_values", models.TextField(blank=True, null=True)),
                ("job_id", models.CharField(blank=True, max_length=255, null=True)),
                ("queued_by", models.CharField(blank=True, max_length=255, null=True)),
                ("queued_at", models.DateTimeField(blank=True, null=True)),
                ("peak_memory_usage", models.IntegerField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PortalSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "hide_standard_menu",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "default_portal_home",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "custom_menu",
                    models.ManyToManyField(
                        related_name="PortalSettingsCustomMenu",
                        to="frappe_app.portalmenuitem",
                    ),
                ),
                (
                    "default_role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PortalSettingsDefaultRole",
                        to="frappe_app.role",
                    ),
                ),
                (
                    "menu",
                    models.ManyToManyField(
                        related_name="PortalSettingsMenu",
                        to="frappe_app.portalmenuitem",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="portalmenuitem",
            name="role",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="PortalMenuItemRole",
                to="frappe_app.role",
            ),
        ),
        migrations.CreateModel(
            name="PersonalDataDownloadRequest",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("user_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "amended_from",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PersonalDataDownloadRequestAmendedFrom",
                        to="frappe_app.personaldatadownloadrequest",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PersonalDataDownloadRequestUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PersonalDataDeletionStep",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "document_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[("Pending", "Pending"), ("Deleted", "Deleted")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("partial", models.BooleanField(blank=True, default="0", null=True)),
                ("fields", models.TextField(blank=True, null=True)),
                (
                    "filtered_by",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PersonalDataDeletionRequest",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Pending Verification", "Pending Verification"),
                            ("Pending Approval", "Pending Approval"),
                            ("On Hold", "On Hold"),
                            ("Deleted", "Deleted"),
                        ],
                        default="Pending Verification",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "anonymization_matrix",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "deletion_steps",
                    models.ManyToManyField(
                        related_name="PersonalDataDeletionRequestDeletionSteps",
                        to="frappe_app.personaldatadeletionstep",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PermissionLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("changed_at", models.DateTimeField(blank=True, null=True)),
                ("changes", models.TextField(blank=True, null=True)),
                ("changed_values", models.TextField(blank=True, null=True)),
                (
                    "for_document",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("reference", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Updated", "Updated"),
                            ("Removed", "Removed"),
                            ("Added", "Added"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PermissionLogChangedBy",
                        to="frappe_app.user",
                    ),
                ),
                (
                    "for_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PermissionLogForDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PermissionLogReferenceType",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PermissionInspector",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("docname", models.CharField(blank=True, max_length=255, null=True)),
                ("output", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "permission_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("read", "read"),
                            ("write", "write"),
                            ("create", "create"),
                            ("delete", "delete"),
                            ("submit", "submit"),
                            ("cancel", "cancel"),
                            ("select", "select"),
                            ("amend", "amend"),
                            ("print", "print"),
                            ("email", "email"),
                            ("report", "report"),
                            ("import", "import"),
                            ("export", "export"),
                            ("share", "share"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ref_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PermissionInspectorRefDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PermissionInspectorUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PatchLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("patch", models.CharField(blank=True, max_length=255, null=True)),
                ("skipped", models.BooleanField(blank=True, default="0", null=True)),
                ("traceback", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Page",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "system_page",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("page_name", models.CharField(blank=True, max_length=255, null=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("icon", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "standard",
                    models.CharField(
                        blank=True,
                        choices=[("Yes", "Yes"), ("No", "No")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PageModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "restrict_to_domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PageRestrictToDomain",
                        to="frappe_app.domain",
                    ),
                ),
                (
                    "roles",
                    models.ManyToManyField(
                        related_name="PageRoles", to="frappe_app.hasrole"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PackageRelease",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("major", models.IntegerField(blank=True, null=True)),
                ("minor", models.IntegerField(blank=True, null=True)),
                ("patch", models.IntegerField(blank=True, null=True)),
                ("path", models.TextField(blank=True, null=True)),
                ("release_notes", models.TextField(blank=True, null=True)),
                ("publish", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "package",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="PackageReleasePackage",
                        to="frappe_app.package",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PackageImport",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "attach_package",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("activate", models.BooleanField(blank=True, default="0", null=True)),
                ("log", models.CharField(blank=True, max_length=255, null=True)),
                ("force", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OnboardingStepMap",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "step",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="OnboardingStepMapStep",
                        to="frappe_app.onboardingstep",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="onboardingstep",
            name="reference_report",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="OnboardingStepReferenceReport",
                to="frappe_app.report",
            ),
        ),
        migrations.CreateModel(
            name="OnboardingPermission",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="OnboardingPermissionRole",
                        to="frappe_app.role",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OAuthProviderSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "skip_authorization",
                    models.CharField(
                        blank=True,
                        choices=[("Force", "Force"), ("Auto", "Auto")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OAuthClientRole",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="OAuthClientRoleRole",
                        to="frappe_app.role",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OAuthClient",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("client_id", models.CharField(blank=True, max_length=255, null=True)),
                ("app_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "client_secret",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "skip_authorization",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "scopes",
                    models.TextField(blank=True, default="all openid", null=True),
                ),
                ("redirect_uris", models.TextField(blank=True, null=True)),
                (
                    "default_redirect_uri",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "grant_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Authorization Code", "Authorization Code"),
                            ("Implicit", "Implicit"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "response_type",
                    models.CharField(
                        blank=True,
                        choices=[("Code", "Code"), ("Token", "Token")],
                        default="Code",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "allowed_roles",
                    models.ManyToManyField(
                        related_name="OAuthClientAllowedRoles",
                        to="frappe_app.oauthclientrole",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="OAuthClientUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OAuthBearerToken",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("scopes", models.TextField(blank=True, null=True)),
                (
                    "access_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "refresh_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("expiration_time", models.DateTimeField(blank=True, null=True)),
                ("expires_in", models.IntegerField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[("Active", "Active"), ("Revoked", "Revoked")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="OAuthBearerTokenClient",
                        to="frappe_app.oauthclient",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="OAuthBearerTokenUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OAuthAuthorizationCode",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("scopes", models.TextField(blank=True, null=True)),
                (
                    "authorization_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("expiration_time", models.DateTimeField(blank=True, null=True)),
                (
                    "redirect_uri_bound_to_authorization_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "validity",
                    models.CharField(
                        blank=True,
                        choices=[("Valid", "Valid"), ("Invalid", "Invalid")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("nonce", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "code_challenge",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "code_challenge_method",
                    models.CharField(
                        blank=True,
                        choices=[("s256", "s256"), ("plain", "plain")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="OAuthAuthorizationCodeClient",
                        to="frappe_app.oauthclient",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="OAuthAuthorizationCodeUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NumberCardLink",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "card",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NumberCardLinkCard",
                        to="frappe_app.numbercard",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="numbercard",
            name="report_name",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="NumberCardReportName",
                to="frappe_app.report",
            ),
        ),
        migrations.CreateModel(
            name="NotificationSubscribedDocument",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "document",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NotificationSubscribedDocumentDocument",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NotificationSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enabled", models.BooleanField(blank=True, default="1", null=True)),
                (
                    "enable_email_notifications",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "enable_email_mention",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "enable_email_assignment",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "enable_email_energy_point",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "enable_email_share",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                ("seen", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "energy_points_system_notifications",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "enable_email_event_reminders",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "enable_email_threads_on_assigned_document",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "subscribed_documents",
                    models.ManyToManyField(
                        related_name="NotificationSettingsSubscribedDocuments",
                        to="frappe_app.notificationsubscribeddocument",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default="__user",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NotificationSettingsUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NotificationRecipient",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("cc", models.CharField(blank=True, max_length=255, null=True)),
                ("bcc", models.CharField(blank=True, max_length=255, null=True)),
                ("condition", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "receiver_by_document_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "receiver_by_role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NotificationRecipientReceiverByRole",
                        to="frappe_app.role",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("subject", models.TextField(blank=True, null=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Mention", "Mention"),
                            ("Energy Point", "Energy Point"),
                            ("Assignment", "Assignment"),
                            ("Share", "Share"),
                            ("Alert", "Alert"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "email_content",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "document_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("read", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "open_reference_document",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "attached_file",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("attachment_link", models.TextField(blank=True, null=True)),
                ("link", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NotificationLogDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "for_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NotificationLogForUser",
                        to="frappe_app.user",
                    ),
                ),
                (
                    "from_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NotificationLogFromUser",
                        to="frappe_app.user",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enabled", models.BooleanField(blank=True, default="1", null=True)),
                (
                    "channel",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Email", "Email"),
                            ("Slack", "Slack"),
                            ("System Notification", "System Notification"),
                            ("SMS", "SMS"),
                        ],
                        default="Email",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("subject", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "is_standard",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "event",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("New", "New"),
                            ("Save", "Save"),
                            ("Submit", "Submit"),
                            ("Cancel", "Cancel"),
                            ("Days After", "Days After"),
                            ("Days Before", "Days Before"),
                            ("Minutes After", "Minutes After"),
                            ("Minutes Before", "Minutes Before"),
                            ("Value Change", "Value Change"),
                            ("Method", "Method"),
                            ("Custom", "Custom"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("method", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "date_changed",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "days_in_advance",
                    models.IntegerField(blank=True, default="0", null=True),
                ),
                (
                    "value_changed",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "sender_email",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("condition", models.CharField(blank=True, max_length=255, null=True)),
                ("html_7", models.TextField(blank=True, null=True)),
                (
                    "set_property_after_alert",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "property_value",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "message",
                    models.CharField(
                        blank=True,
                        default="Add your message here",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("message_examples", models.TextField(blank=True, null=True)),
                (
                    "view_properties",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "attach_print",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "send_system_notification",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "send_to_all_assignees",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "message_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Markdown", "Markdown"),
                            ("HTML", "HTML"),
                            ("Plain Text", "Plain Text"),
                        ],
                        default="Markdown",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "datetime_changed",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "minutes_offset",
                    models.IntegerField(blank=True, default="0", null=True),
                ),
                ("datetime_last_run", models.DateTimeField(blank=True, null=True)),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NotificationDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NotificationModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "print_format",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NotificationPrintFormat",
                        to="frappe_app.printformat",
                    ),
                ),
                (
                    "recipients",
                    models.ManyToManyField(
                        related_name="NotificationRecipients",
                        to="frappe_app.notificationrecipient",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NotificationSender",
                        to="frappe_app.emailaccount",
                    ),
                ),
                (
                    "slack_webhook_url",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NotificationSlackWebhookUrl",
                        to="frappe_app.slackwebhookurl",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NoteSeenBy",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NoteSeenByUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("public", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "notify_on_login",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "notify_on_every_login",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("expire_notification_on", models.DateField(blank=True, null=True)),
                ("content", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "seen_by",
                    models.ManyToManyField(
                        related_name="NoteSeenBy", to="frappe_app.noteseenby"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NewsletterEmailGroup",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "total_subscribers",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "email_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NewsletterEmailGroupEmailGroup",
                        to="frappe_app.emailgroup",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NewsletterAttachment",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("attachment", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Newsletter",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("send_from", models.CharField(blank=True, max_length=255, null=True)),
                ("email_sent", models.BooleanField(blank=True, default="0", null=True)),
                ("subject", models.TextField(blank=True, null=True)),
                ("message", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "send_unsubscribe_link",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                ("published", models.BooleanField(blank=True, default="0", null=True)),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                ("scheduled_to_send", models.IntegerField(blank=True, null=True)),
                ("schedule_send", models.DateTimeField(blank=True, null=True)),
                (
                    "content_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Rich Text", "Rich Text"),
                            ("Markdown", "Markdown"),
                            ("HTML", "HTML"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("message_md", models.TextField(blank=True, null=True)),
                ("message_html", models.TextField(blank=True, null=True)),
                (
                    "schedule_sending",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "send_webview_link",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "sender_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sender_email",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("email_sent_at", models.DateTimeField(blank=True, null=True)),
                ("total_recipients", models.IntegerField(blank=True, null=True)),
                (
                    "total_views",
                    models.IntegerField(blank=True, default="0", null=True),
                ),
                (
                    "attachments",
                    models.ManyToManyField(
                        related_name="NewsletterAttachments",
                        to="frappe_app.newsletterattachment",
                    ),
                ),
                (
                    "campaign",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="NewsletterCampaign",
                        to="frappe_app.utmcampaign",
                    ),
                ),
                (
                    "email_group",
                    models.ManyToManyField(
                        related_name="NewsletterEmailGroup",
                        to="frappe_app.newsletteremailgroup",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NetworkPrinterSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "server_ip",
                    models.CharField(
                        blank=True, default="localhost", max_length=255, null=True
                    ),
                ),
                ("port", models.IntegerField(blank=True, default="631", null=True)),
                (
                    "printer_name",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="NavbarSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("app_logo", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "announcement_widget",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "help_dropdown",
                    models.ManyToManyField(
                        related_name="NavbarSettingsHelpDropdown",
                        to="frappe_app.navbaritem",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "settings_dropdown",
                    models.ManyToManyField(
                        related_name="NavbarSettingsSettingsDropdown",
                        to="frappe_app.navbaritem",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ModuleOnboarding",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("subtitle", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "success_message",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "documentation_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "is_complete",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_roles",
                    models.ManyToManyField(
                        related_name="ModuleOnboardingAllowRoles",
                        to="frappe_app.onboardingpermission",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ModuleOnboardingModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "steps",
                    models.ManyToManyField(
                        related_name="ModuleOnboardingSteps",
                        to="frappe_app.onboardingstepmap",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="moduledef",
            name="package",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ModuleDefPackage",
                to="frappe_app.package",
            ),
        ),
        migrations.AddField(
            model_name="moduledef",
            name="restrict_to_domain",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ModuleDefRestrictToDomain",
                to="frappe_app.domain",
            ),
        ),
        migrations.CreateModel(
            name="MilestoneTracker",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "track_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("disabled", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="MilestoneTrackerDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Milestone",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "reference_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "track_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("value", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "milestone_tracker",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="MilestoneMilestoneTracker",
                        to="frappe_app.milestonetracker",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="MilestoneReferenceType",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LogsToClear",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("days", models.IntegerField(blank=True, default="30", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ref_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="LogsToClearRefDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LogSettingUser",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="LogSettingUserUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LogSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "logs_to_clear",
                    models.ManyToManyField(
                        related_name="LogSettingsLogsToClear",
                        to="frappe_app.logstoclear",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ListViewSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "disable_count",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "disable_sidebar_stats",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "disable_auto_refresh",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "total_fields",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                            ("7", "7"),
                            ("8", "8"),
                            ("9", "9"),
                            ("10", "10"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("fields_html", models.TextField(blank=True, null=True)),
                ("fields", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "disable_comment_count",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("allow_edit", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "disable_automatic_recency_filters",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ListFilter",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "filter_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("filters", models.TextField(blank=True, null=True)),
                (
                    "for_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ListFilterForUser",
                        to="frappe_app.user",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ListFilterReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LDAPSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enabled", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "ldap_server_url",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("base_dn", models.CharField(blank=True, max_length=255, null=True)),
                ("password", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "ldap_search_string",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_email_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_username_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_first_name_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_middle_name_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_last_name_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_phone_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_mobile_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ssl_tls_mode",
                    models.CharField(
                        blank=True,
                        choices=[("Off", "Off"), ("StartTLS", "StartTLS")],
                        default="Off",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "require_trusted_certificate",
                    models.CharField(
                        blank=True,
                        choices=[("No", "No"), ("Yes", "Yes")],
                        default="No",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "local_private_key_file",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "local_server_certificate_file",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "local_ca_certs_file",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_group_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_group_member_attribute",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_directory_server",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Active Directory", "Active Directory"),
                            ("OpenLDAP", "OpenLDAP"),
                            ("Custom", "Custom"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "ldap_group_objectclass",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_custom_group_search",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_search_path_user",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ldap_search_path_group",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "do_not_create_new_user",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "default_role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="LDAPSettingsDefaultRole",
                        to="frappe_app.role",
                    ),
                ),
                (
                    "default_user_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="LDAPSettingsDefaultUserType",
                        to="frappe_app.usertype",
                    ),
                ),
                (
                    "ldap_groups",
                    models.ManyToManyField(
                        related_name="LDAPSettingsLdapGroups",
                        to="frappe_app.ldapgroupmapping",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="ldapgroupmapping",
            name="erpnext_role",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="LDAPGroupMappingErpnextRole",
                to="frappe_app.role",
            ),
        ),
        migrations.AddField(
            model_name="ldapgroupmapping",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="ldapgroupmapping",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="KanbanBoardColumn",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "column_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[("Active", "Active"), ("Archived", "Archived")],
                        default="Active",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "indicator",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Blue", "Blue"),
                            ("Cyan", "Cyan"),
                            ("Gray", "Gray"),
                            ("Green", "Green"),
                            ("Light Blue", "Light Blue"),
                            ("Orange", "Orange"),
                            ("Pink", "Pink"),
                            ("Purple", "Purple"),
                            ("Red", "Red"),
                            ("Yellow", "Yellow"),
                        ],
                        default="Gray",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("order", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="kanbanboard",
            name="columns",
            field=models.ManyToManyField(
                related_name="KanbanBoardColumns", to="frappe_app.kanbanboardcolumn"
            ),
        ),
        migrations.AddField(
            model_name="kanbanboard",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="kanbanboard",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="kanbanboard",
            name="reference_doctype",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="KanbanBoardReferenceDoctype",
                to="frappe_app.doctype",
            ),
        ),
        migrations.CreateModel(
            name="IntegrationRequest",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "integration_request_service",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Queued", "Queued"),
                            ("Authorized", "Authorized"),
                            ("Completed", "Completed"),
                            ("Cancelled", "Cancelled"),
                            ("Failed", "Failed"),
                        ],
                        default="Queued",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("data", models.CharField(blank=True, max_length=255, null=True)),
                ("output", models.CharField(blank=True, max_length=255, null=True)),
                ("error", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "reference_docname",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "is_remote_request",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "request_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("request_id", models.CharField(blank=True, max_length=255, null=True)),
                ("url", models.TextField(blank=True, null=True)),
                (
                    "request_headers",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="IntegrationRequestReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InstalledApplications",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "installed_applications",
                    models.ManyToManyField(
                        related_name="InstalledApplicationsInstalledApplications",
                        to="frappe_app.installedapplication",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="IMAPFolder",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "folder_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "uidvalidity",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("uidnext", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "append_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="IMAPFolderAppendTo",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HelpCategory",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "category_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("category_description", models.TextField(blank=True, null=True)),
                ("published", models.BooleanField(blank=True, default="0", null=True)),
                ("help_articles", models.IntegerField(blank=True, null=True)),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HelpArticle",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("published", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "author",
                    models.CharField(
                        blank=True, default="user_fullname", max_length=255, null=True
                    ),
                ),
                (
                    "level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Beginner", "Beginner"),
                            ("Intermediate", "Intermediate"),
                            ("Expert", "Expert"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("content", models.CharField(blank=True, max_length=255, null=True)),
                ("likes", models.IntegerField(blank=True, null=True)),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                ("helpful", models.IntegerField(blank=True, default="0", null=True)),
                (
                    "not_helpful",
                    models.IntegerField(blank=True, default="0", null=True),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="HelpArticleCategory",
                        to="frappe_app.helpcategory",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="hasrole",
            name="role",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="HasRoleRole",
                to="frappe_app.role",
            ),
        ),
        migrations.CreateModel(
            name="HasDomain",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="HasDomainDomain",
                        to="frappe_app.domain",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GoogleSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enable", models.BooleanField(blank=True, default="0", null=True)),
                ("client_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "client_secret",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("api_key", models.CharField(blank=True, max_length=255, null=True)),
                ("app_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "google_drive_picker_enabled",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GoogleDrive",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enable", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "backup_folder_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "authorize_google_drive_access",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "backup_folder_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "frequency",
                    models.CharField(
                        blank=True,
                        choices=[("Daily", "Daily"), ("Weekly", "Weekly")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "refresh_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "authorization_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("last_backup_on", models.DateTimeField(blank=True, null=True)),
                (
                    "send_email_for_successful_backup",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "file_backup",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GoogleContacts",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enable", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "authorization_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "refresh_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("last_sync_on", models.DateTimeField(blank=True, null=True)),
                ("email_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "authorize_google_contacts_access",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "next_sync_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "pull_from_google_contacts",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "push_to_google_contacts",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GoogleCalendar",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enable", models.BooleanField(blank=True, default="1", null=True)),
                (
                    "calendar_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "refresh_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "authorization_code",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "next_sync_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "google_calendar_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "authorize_google_calendar_access",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "pull_from_google_calendar",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "sync_as_public",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "push_to_google_calendar",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="GoogleCalendarUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GlobalSearchSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "allowed_in_global_search",
                    models.ManyToManyField(
                        related_name="GlobalSearchSettingsAllowedInGlobalSearch",
                        to="frappe_app.globalsearchdoctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GeolocationSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "provider",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Geoapify", "Geoapify"),
                            ("Nomatim", "Nomatim"),
                            ("HERE", "HERE"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("api_key", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "enable_address_autocompletion",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("base_url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="FormTourStep",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "fieldname",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "position",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Left", "Left"),
                            ("Left Center", "Left Center"),
                            ("Left Bottom", "Left Bottom"),
                            ("Top", "Top"),
                            ("Top Center", "Top Center"),
                            ("Top Right", "Top Right"),
                            ("Right", "Right"),
                            ("Right Center", "Right Center"),
                            ("Right Bottom", "Right Bottom"),
                            ("Bottom", "Bottom"),
                            ("Bottom Center", "Bottom Center"),
                            ("Bottom Right", "Bottom Right"),
                            ("Mid Center", "Mid Center"),
                        ],
                        default="Bottom",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "next_step_condition",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "has_next_condition",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "fieldtype",
                    models.CharField(
                        blank=True, default="0", max_length=255, null=True
                    ),
                ),
                (
                    "is_table_field",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "child_doctype",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "parent_fieldname",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("ui_tour", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "element_selector",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "parent_element_selector",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "hide_buttons",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "next_on_click",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "popover_element",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("offset_x", models.IntegerField(blank=True, default="0", null=True)),
                ("offset_y", models.IntegerField(blank=True, default="0", null=True)),
                (
                    "modal_trigger",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("ondemand_description", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "next_form_tour",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="FormTourStepNextFormTour",
                        to="frappe_app.formtour",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="formtour",
            name="module",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="FormTourModule",
                to="frappe_app.moduledef",
            ),
        ),
        migrations.AddField(
            model_name="formtour",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="formtour",
            name="page_name",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="FormTourPageName",
                to="cms_app.page",
            ),
        ),
        migrations.AddField(
            model_name="formtour",
            name="reference_doctype",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="FormTourReferenceDoctype",
                to="frappe_app.doctype",
            ),
        ),
        migrations.AddField(
            model_name="formtour",
            name="report_name",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="FormTourReportName",
                to="frappe_app.report",
            ),
        ),
        migrations.AddField(
            model_name="formtour",
            name="steps",
            field=models.ManyToManyField(
                related_name="FormTourSteps", to="frappe_app.formtourstep"
            ),
        ),
        migrations.AddField(
            model_name="formtour",
            name="workspace_name",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="FormTourWorkspaceName",
                to="frappe_app.workspace",
            ),
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("file_name", models.CharField(blank=True, max_length=255, null=True)),
                ("is_private", models.BooleanField(blank=True, default="0", null=True)),
                ("preview_html", models.TextField(blank=True, null=True)),
                (
                    "is_home_folder",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "is_attachments_folder",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("file_size", models.IntegerField(blank=True, null=True)),
                ("file_url", models.CharField(blank=True, max_length=255, null=True)),
                ("thumbnail_url", models.TextField(blank=True, null=True)),
                ("is_folder", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "attached_to_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "attached_to_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("old_parent", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "content_hash",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "uploaded_to_dropbox",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "uploaded_to_google_drive",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("file_type", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "attached_to_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="FileAttachedToDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "folder",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="FileFolder",
                        to="frappe_app.file",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EventParticipants",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "reference_docname",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EventParticipantsReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("subject", models.TextField(blank=True, null=True)),
                (
                    "event_category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Event", "Event"),
                            ("Meeting", "Meeting"),
                            ("Call", "Call"),
                            ("Sent/Received Email", "Sent/Received Email"),
                            ("Other", "Other"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        blank=True,
                        choices=[("Private", "Private"), ("Public", "Public")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "send_reminder",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "repeat_this_event",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("starts_on", models.DateTimeField(blank=True, null=True)),
                ("ends_on", models.DateTimeField(blank=True, null=True)),
                ("all_day", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "repeat_on",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Daily", "Daily"),
                            ("Weekly", "Weekly"),
                            ("Monthly", "Monthly"),
                            ("Quarterly", "Quarterly"),
                            ("Half Yearly", "Half Yearly"),
                            ("Yearly", "Yearly"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("repeat_till", models.DateField(blank=True, null=True)),
                ("monday", models.BooleanField(blank=True, default="0", null=True)),
                ("tuesday", models.BooleanField(blank=True, default="0", null=True)),
                ("wednesday", models.BooleanField(blank=True, default="0", null=True)),
                ("thursday", models.BooleanField(blank=True, default="0", null=True)),
                ("friday", models.BooleanField(blank=True, default="0", null=True)),
                ("saturday", models.BooleanField(blank=True, default="0", null=True)),
                ("sunday", models.BooleanField(blank=True, default="0", null=True)),
                ("color", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Open", "Open"),
                            ("Completed", "Completed"),
                            ("Closed", "Closed"),
                            ("Cancelled", "Cancelled"),
                        ],
                        default="Open",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "custom_google_calendar",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "google_calendar_event_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sync_with_google_calendar",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "pulled_from_google_calendar",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("sender", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "add_video_conferencing",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "google_meet_link",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "event_participants",
                    models.ManyToManyField(
                        related_name="EventEventParticipants",
                        to="frappe_app.eventparticipants",
                    ),
                ),
                (
                    "google_calendar",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EventGoogleCalendar",
                        to="frappe_app.googlecalendar",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ErrorLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("seen", models.BooleanField(blank=True, default="0", null=True)),
                ("method", models.CharField(blank=True, max_length=255, null=True)),
                ("error", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "reference_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("trace_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ErrorLogReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EnergyPointSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enabled", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "point_allocation_periodicity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Daily", "Daily"),
                            ("Weekly", "Weekly"),
                            ("Monthly", "Monthly"),
                        ],
                        default="Weekly",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("last_point_allocation_date", models.DateField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "review_levels",
                    models.ManyToManyField(
                        related_name="EnergyPointSettingsReviewLevels",
                        to="frappe_app.reviewlevel",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EnergyPointRule",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enabled", models.BooleanField(blank=True, default="1", null=True)),
                ("rule_name", models.CharField(blank=True, max_length=255, null=True)),
                ("condition", models.CharField(blank=True, max_length=255, null=True)),
                ("points", models.IntegerField(blank=True, null=True)),
                (
                    "user_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "multiplier_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("max_points", models.IntegerField(blank=True, null=True)),
                (
                    "for_doc_event",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("New", "New"),
                            ("Submit", "Submit"),
                            ("Cancel", "Cancel"),
                            ("Value Change", "Value Change"),
                            ("Custom", "Custom"),
                        ],
                        default="Custom",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "for_assigned_users",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "field_to_check",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "apply_only_once",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EnergyPointRuleReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EnergyPointLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Auto", "Auto"),
                            ("Appreciation", "Appreciation"),
                            ("Criticism", "Criticism"),
                            ("Review", "Review"),
                            ("Revert", "Revert"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "reference_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("points", models.IntegerField(blank=True, null=True)),
                ("reason", models.TextField(blank=True, null=True)),
                ("reverted", models.BooleanField(blank=True, default="0", null=True)),
                ("seen", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EnergyPointLogReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "revert_of",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EnergyPointLogRevertOf",
                        to="frappe_app.energypointlog",
                    ),
                ),
                (
                    "rule",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EnergyPointLogRule",
                        to="frappe_app.energypointrule",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EnergyPointLogUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmailUnsubscribe",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "reference_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "global_unsubscribe",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EmailUnsubscribeReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmailRule",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("email_id", models.CharField(blank=True, max_length=255, null=True)),
                ("is_spam", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmailQueueRecipient",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("recipient", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[("Not Sent", "Not Sent"), ("Sent", "Sent")],
                        default="Not Sent",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("error", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmailQueue",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("sender", models.CharField(blank=True, max_length=255, null=True)),
                ("show_as_cc", models.TextField(blank=True, null=True)),
                ("message", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Not Sent", "Not Sent"),
                            ("Sending", "Sending"),
                            ("Sent", "Sent"),
                            ("Partially Sent", "Partially Sent"),
                            ("Error", "Error"),
                        ],
                        default="Not Sent",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("error", models.CharField(blank=True, max_length=255, null=True)),
                ("custom_message", models.TextField(blank=True, null=True)),
                (
                    "reference_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("send_after", models.DateTimeField(blank=True, null=True)),
                ("priority", models.IntegerField(blank=True, default="1", null=True)),
                (
                    "add_unsubscribe_link",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "unsubscribe_method",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "expose_recipients",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "attachments",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("retry", models.IntegerField(blank=True, default="0", null=True)),
                (
                    "unsubscribe_params",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "communication",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EmailQueueCommunication",
                        to="frappe_app.communication",
                    ),
                ),
                (
                    "email_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EmailQueueEmailAccount",
                        to="frappe_app.emailaccount",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "recipients",
                    models.ManyToManyField(
                        related_name="EmailQueueRecipients",
                        to="frappe_app.emailqueuerecipient",
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EmailQueueReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmailGroupMember",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("email", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "unsubscribed",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "email_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="EmailGroupMemberEmailGroup",
                        to="frappe_app.emailgroup",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="emailgroup",
            name="confirmation_email_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="EmailGroupConfirmationEmailTemplate",
                to="frappe_app.emailtemplate",
            ),
        ),
        migrations.AddField(
            model_name="emailgroup",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="emailgroup",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="emailgroup",
            name="welcome_email_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="EmailGroupWelcomeEmailTemplate",
                to="frappe_app.emailtemplate",
            ),
        ),
        migrations.CreateModel(
            name="EmailFlagQueue",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "is_completed",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "communication",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "action",
                    models.CharField(
                        blank=True,
                        choices=[("Read", "Read"), ("Unread", "Unread")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "email_account",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("uid", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EmailDomain",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "domain_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "email_server",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("use_imap", models.BooleanField(blank=True, default="0", null=True)),
                ("use_ssl", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "use_starttls",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("attachment_limit", models.IntegerField(blank=True, null=True)),
                (
                    "smtp_server",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("use_tls", models.BooleanField(blank=True, default="0", null=True)),
                ("smtp_port", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "incoming_port",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "append_emails_to_sent_folder",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "use_ssl_for_outgoing",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "validate_ssl_certificate",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "validate_ssl_certificate_for_outgoing",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "sent_folder_name",
                    models.CharField(
                        blank=True, default="Sent", max_length=255, null=True
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="emailaccount",
            name="connected_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="EmailAccountConnectedUser",
                to="frappe_app.user",
            ),
        ),
        migrations.AddField(
            model_name="emailaccount",
            name="domain",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="EmailAccountDomain",
                to="frappe_app.emaildomain",
            ),
        ),
        migrations.AddField(
            model_name="emailaccount",
            name="imap_folder",
            field=models.ManyToManyField(
                related_name="EmailAccountImapFolder", to="frappe_app.imapfolder"
            ),
        ),
        migrations.AddField(
            model_name="emailaccount",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="emailaccount",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="DynamicLink",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("link_name", models.CharField(blank=True, max_length=255, null=True)),
                ("link_title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "link_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DynamicLinkLinkDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DropboxSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enabled", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "send_notifications_to",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "send_email_for_successful_backup",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "backup_frequency",
                    models.CharField(
                        blank=True,
                        choices=[("Daily", "Daily"), ("Weekly", "Weekly")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "limit_no_of_backups",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "no_of_backups",
                    models.IntegerField(blank=True, default="5", null=True),
                ),
                (
                    "file_backup",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "app_access_key",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "app_secret_key",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "allow_dropbox_access",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dropbox_refresh_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dropbox_access_token",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DomainSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("domains_html", models.TextField(blank=True, null=True)),
                (
                    "active_domains",
                    models.ManyToManyField(
                        related_name="DomainSettingsActiveDomains",
                        to="frappe_app.hasdomain",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocumentShareKey",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "reference_docname",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("key", models.CharField(blank=True, max_length=255, null=True)),
                ("expires_on", models.DateField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DocumentShareKeyReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocumentNamingSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("help_html", models.TextField(blank=True, null=True)),
                (
                    "user_must_always_select",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("update", models.CharField(blank=True, max_length=255, null=True)),
                ("prefix", models.CharField(blank=True, max_length=255, null=True)),
                ("current_value", models.IntegerField(blank=True, null=True)),
                (
                    "update_series_start",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("naming_series_options", models.TextField(blank=True, null=True)),
                (
                    "try_naming_series",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "transaction_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("series_preview", models.TextField(blank=True, null=True)),
                (
                    "default_amend_naming",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Amend Counter", "Amend Counter"),
                            ("Default Naming", "Default Naming"),
                        ],
                        default="Amend Counter",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "update_amendment_naming",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "amend_naming_override",
                    models.ManyToManyField(
                        related_name="DocumentNamingSettingsAmendNamingOverride",
                        to="frappe_app.amendeddocumentnamingsettings",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocumentNamingRuleCondition",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "condition",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("=", "="),
                            ("!=", "!="),
                            (">", ">"),
                            ("<", "<"),
                            (">=", ">="),
                            ("<=", "<="),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("value", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocumentNamingRule",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("disabled", models.BooleanField(blank=True, default="0", null=True)),
                ("prefix", models.CharField(blank=True, max_length=255, null=True)),
                ("counter", models.IntegerField(blank=True, default="0", null=True)),
                (
                    "prefix_digits",
                    models.IntegerField(blank=True, default="5", null=True),
                ),
                ("priority", models.IntegerField(blank=True, null=True)),
                (
                    "conditions",
                    models.ManyToManyField(
                        related_name="DocumentNamingRuleConditions",
                        to="frappe_app.documentnamingrulecondition",
                    ),
                ),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DocumentNamingRuleDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocumentFollow",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "ref_docname",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "ref_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DocumentFollowRefDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DocumentFollowUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocTypeState",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "color",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Blue", "Blue"),
                            ("Cyan", "Cyan"),
                            ("Gray", "Gray"),
                            ("Green", "Green"),
                            ("Light Blue", "Light Blue"),
                            ("Orange", "Orange"),
                            ("Pink", "Pink"),
                            ("Purple", "Purple"),
                            ("Red", "Red"),
                            ("Yellow", "Yellow"),
                        ],
                        default="Blue",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("custom", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocTypeLink",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "link_fieldname",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("group", models.CharField(blank=True, max_length=255, null=True)),
                ("hidden", models.BooleanField(blank=True, default="0", null=True)),
                ("custom", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "is_child_table",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "table_fieldname",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "link_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DocTypeLinkLinkDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DocTypeLinkParentDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocTypeLayoutField",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "fieldname",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocTypeLayout",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "client_script",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DocTypeLayoutDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "fields",
                    models.ManyToManyField(
                        related_name="DocTypeLayoutFields",
                        to="frappe_app.doctypelayoutfield",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocTypeAction",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                ("group", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "action_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Server Action", "Server Action"),
                            ("Route", "Route"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("action", models.TextField(blank=True, null=True)),
                ("hidden", models.BooleanField(blank=True, default="0", null=True)),
                ("custom", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="doctype",
            name="actions",
            field=models.ManyToManyField(
                related_name="DocTypeActions", to="frappe_app.doctypeaction"
            ),
        ),
        migrations.AddField(
            model_name="doctype",
            name="default_email_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DocTypeDefaultEmailTemplate",
                to="frappe_app.emailtemplate",
            ),
        ),
        migrations.AddField(
            model_name="doctype",
            name="fields",
            field=models.ManyToManyField(
                related_name="DocTypeFields", to="frappe_app.docfield"
            ),
        ),
        migrations.AddField(
            model_name="doctype",
            name="links",
            field=models.ManyToManyField(
                related_name="DocTypeLinks", to="frappe_app.doctypelink"
            ),
        ),
        migrations.AddField(
            model_name="doctype",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="doctype",
            name="module",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DocTypeModule",
                to="frappe_app.moduledef",
            ),
        ),
        migrations.AddField(
            model_name="doctype",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="doctype",
            name="permissions",
            field=models.ManyToManyField(
                related_name="DocTypePermissions", to="frappe_app.docperm"
            ),
        ),
        migrations.AddField(
            model_name="doctype",
            name="restrict_to_domain",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DocTypeRestrictToDomain",
                to="frappe_app.domain",
            ),
        ),
        migrations.AddField(
            model_name="doctype",
            name="states",
            field=models.ManyToManyField(
                related_name="DocTypeStates", to="frappe_app.doctypestate"
            ),
        ),
        migrations.CreateModel(
            name="DocShare",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("share_name", models.CharField(blank=True, max_length=255, null=True)),
                ("read", models.BooleanField(blank=True, default="0", null=True)),
                ("write", models.BooleanField(blank=True, default="0", null=True)),
                ("share", models.BooleanField(blank=True, default="0", null=True)),
                ("everyone", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "notify_by_email",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                ("submit", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "share_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DocShareShareDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DocShareUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="docperm",
            name="role",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DocPermRole",
                to="frappe_app.role",
            ),
        ),
        migrations.CreateModel(
            name="DiscussionTopic",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "reference_docname",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DiscussionTopicReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DiscussionReply",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("reply", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DiscussionReplyTopic",
                        to="frappe_app.discussiontopic",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DesktopIcon",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "module_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                ("standard", models.BooleanField(blank=True, default="0", null=True)),
                ("custom", models.BooleanField(blank=True, default="0", null=True)),
                ("app", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("category", models.CharField(blank=True, max_length=255, null=True)),
                ("hidden", models.BooleanField(blank=True, default="0", null=True)),
                ("blocked", models.BooleanField(blank=True, default="0", null=True)),
                ("force_show", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("module", "module"),
                            ("list", "list"),
                            ("link", "link"),
                            ("page", "page"),
                            ("query-report", "query-report"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("link", models.TextField(blank=True, null=True)),
                ("color", models.CharField(blank=True, max_length=255, null=True)),
                ("icon", models.CharField(blank=True, max_length=255, null=True)),
                ("reverse", models.BooleanField(blank=True, default="0", null=True)),
                ("idx", models.IntegerField(blank=True, null=True)),
                (
                    "_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DesktopIconDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "_report",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DesktopIconReport",
                        to="frappe_app.report",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DeletedDocument",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "deleted_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "deleted_doctype",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("restored", models.BooleanField(blank=True, default="0", null=True)),
                ("new_name", models.CharField(blank=True, max_length=255, null=True)),
                ("data", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DataImportLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("docname", models.CharField(blank=True, max_length=255, null=True)),
                ("exception", models.TextField(blank=True, null=True)),
                (
                    "row_indexes",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("success", models.BooleanField(blank=True, default="0", null=True)),
                ("log_index", models.IntegerField(blank=True, null=True)),
                ("messages", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "data_import",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DataImportLogDataImport",
                        to="frappe_app.dataimport",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="dataimport",
            name="reference_doctype",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DataImportReferenceDoctype",
                to="frappe_app.doctype",
            ),
        ),
        migrations.CreateModel(
            name="DataExport",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "file_type",
                    models.CharField(
                        blank=True,
                        choices=[("Excel", "Excel"), ("CSV", "CSV")],
                        default="CSV",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("filter_list", models.TextField(blank=True, null=True)),
                ("fields_multicheck", models.TextField(blank=True, null=True)),
                (
                    "export_without_main_header",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DataExportReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DashboardSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "chart_config",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DashboardSettingsUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DashboardChartSource",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "source_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("timeseries", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DashboardChartSourceModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DashboardChartLink",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "width",
                    models.CharField(
                        blank=True,
                        choices=[("Half", "Half"), ("Full", "Full")],
                        default="Half",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "chart",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="DashboardChartLinkChart",
                        to="frappe_app.dashboardchart",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DashboardChartField",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "y_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="dashboardchart",
            name="document_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DashboardChartDocumentType",
                to="frappe_app.doctype",
            ),
        ),
        migrations.AddField(
            model_name="dashboardchart",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="dashboardchart",
            name="module",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DashboardChartModule",
                to="frappe_app.moduledef",
            ),
        ),
        migrations.AddField(
            model_name="dashboardchart",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="dashboardchart",
            name="parent_document_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DashboardChartParentDocumentType",
                to="frappe_app.doctype",
            ),
        ),
        migrations.AddField(
            model_name="dashboardchart",
            name="report_name",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DashboardChartReportName",
                to="frappe_app.report",
            ),
        ),
        migrations.AddField(
            model_name="dashboardchart",
            name="roles",
            field=models.ManyToManyField(
                related_name="DashboardChartRoles", to="frappe_app.hasrole"
            ),
        ),
        migrations.AddField(
            model_name="dashboardchart",
            name="source",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DashboardChartSource",
                to="frappe_app.dashboardchartsource",
            ),
        ),
        migrations.AddField(
            model_name="dashboardchart",
            name="y_axis",
            field=models.ManyToManyField(
                related_name="DashboardChartYAxis", to="frappe_app.dashboardchartfield"
            ),
        ),
        migrations.AddField(
            model_name="dashboard",
            name="cards",
            field=models.ManyToManyField(
                related_name="DashboardCards", to="frappe_app.numbercardlink"
            ),
        ),
        migrations.AddField(
            model_name="dashboard",
            name="charts",
            field=models.ManyToManyField(
                related_name="DashboardCharts", to="frappe_app.dashboardchartlink"
            ),
        ),
        migrations.AddField(
            model_name="dashboard",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="dashboard",
            name="module",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="DashboardModule",
                to="frappe_app.moduledef",
            ),
        ),
        migrations.AddField(
            model_name="dashboard",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="CustomRole",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("response", models.TextField(blank=True, null=True)),
                (
                    "ref_doctype",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CustomRolePage",
                        to="cms_app.page",
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CustomRoleReport",
                        to="frappe_app.report",
                    ),
                ),
                (
                    "roles",
                    models.ManyToManyField(
                        related_name="CustomRoleRoles", to="frappe_app.hasrole"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CustomizeFormField",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "fieldtype",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Autocomplete", "Autocomplete"),
                            ("Attach", "Attach"),
                            ("Attach Image", "Attach Image"),
                            ("Barcode", "Barcode"),
                            ("Button", "Button"),
                            ("Check", "Check"),
                            ("Code", "Code"),
                            ("Color", "Color"),
                            ("Column Break", "Column Break"),
                            ("Currency", "Currency"),
                            ("Data", "Data"),
                            ("Date", "Date"),
                            ("Datetime", "Datetime"),
                            ("Duration", "Duration"),
                            ("Dynamic Link", "Dynamic Link"),
                            ("Float", "Float"),
                            ("Fold", "Fold"),
                            ("Geolocation", "Geolocation"),
                            ("Heading", "Heading"),
                            ("HTML", "HTML"),
                            ("HTML Editor", "HTML Editor"),
                            ("Icon", "Icon"),
                            ("Image", "Image"),
                            ("Int", "Int"),
                            ("JSON", "JSON"),
                            ("Link", "Link"),
                            ("Long Text", "Long Text"),
                            ("Markdown Editor", "Markdown Editor"),
                            ("Password", "Password"),
                            ("Percent", "Percent"),
                            ("Phone", "Phone"),
                            ("Rating", "Rating"),
                            ("Read Only", "Read Only"),
                            ("Section Break", "Section Break"),
                            ("Select", "Select"),
                            ("Signature", "Signature"),
                            ("Small Text", "Small Text"),
                            ("Tab Break", "Tab Break"),
                            ("Table", "Table"),
                            ("Table MultiSelect", "Table MultiSelect"),
                            ("Text", "Text"),
                            ("Text Editor", "Text Editor"),
                            ("Time", "Time"),
                        ],
                        default="Data",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("fieldname", models.CharField(blank=True, max_length=255, null=True)),
                ("reqd", models.BooleanField(blank=True, default="0", null=True)),
                ("unique", models.BooleanField(blank=True, default="0", null=True)),
                ("is_virtual", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "in_list_view",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "in_standard_filter",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "in_global_search",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("bold", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "translatable",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "precision",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "0"),
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                            ("7", "7"),
                            ("8", "8"),
                            ("9", "9"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("length", models.IntegerField(blank=True, null=True)),
                ("options", models.TextField(blank=True, null=True)),
                ("fetch_from", models.TextField(blank=True, null=True)),
                (
                    "fetch_if_empty",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("depends_on", models.CharField(blank=True, max_length=255, null=True)),
                ("permlevel", models.IntegerField(blank=True, default="0", null=True)),
                ("hidden", models.BooleanField(blank=True, default="0", null=True)),
                ("read_only", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "collapsible",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_bulk_edit",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "collapsible_depends_on",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "ignore_user_permissions",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_on_submit",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "report_hide",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "remember_last_selected_value",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("default", models.TextField(blank=True, null=True)),
                ("in_filter", models.BooleanField(blank=True, default="0", null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("print_hide", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "print_hide_if_no_value",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "print_width",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("columns", models.IntegerField(blank=True, null=True)),
                ("width", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "is_custom_field",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_in_quick_entry",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "mandatory_depends_on",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "read_only_depends_on",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("in_preview", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "hide_seconds",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("hide_days", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "hide_border",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "non_negative",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "show_dashboard",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("no_copy", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "is_system_generated",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "ignore_xss_filter",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "sort_options",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("link_filters", models.JSONField(blank=True, null=True)),
                (
                    "placeholder",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CustomizeForm",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "naming_rule",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Set by user", "Set by user"),
                            ("By fieldname", "By fieldname"),
                            ("By 'Naming Series' field", "By 'Naming Series' field"),
                            ("Expression", "Expression"),
                            ("Expression (old style)", "Expression (old style)"),
                            ("Random", "Random"),
                            ("By script", "By script"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                ("max_attachments", models.IntegerField(blank=True, null=True)),
                ("allow_copy", models.BooleanField(blank=True, default="0", null=True)),
                ("istable", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "editable_grid",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "quick_entry",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "track_changes",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "title_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "image_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "search_fields",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sort_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "sort_order",
                    models.CharField(
                        blank=True,
                        choices=[("ASC", "ASC"), ("DESC", "DESC")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "track_views",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_auto_repeat",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "allow_import",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "subject_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "sender_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "email_append_to",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "show_preview_popup",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("autoname", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "show_title_field_in_link",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "translated_doctype",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "make_attachments_public",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "queue_in_background",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "default_view",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "force_re_route_to_default_view",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "is_calendar_and_gantt",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("form_builder", models.TextField(blank=True, null=True)),
                ("link_filters", models.JSONField(blank=True, null=True)),
                (
                    "sender_name_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("grid_page_length", models.IntegerField(blank=True, null=True)),
                (
                    "actions",
                    models.ManyToManyField(
                        related_name="CustomizeFormActions",
                        to="frappe_app.doctypeaction",
                    ),
                ),
                (
                    "default_email_template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CustomizeFormDefaultEmailTemplate",
                        to="frappe_app.emailtemplate",
                    ),
                ),
                (
                    "default_print_format",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CustomizeFormDefaultPrintFormat",
                        to="frappe_app.printformat",
                    ),
                ),
                (
                    "doc_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CustomizeFormDocType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "fields",
                    models.ManyToManyField(
                        related_name="CustomizeFormFields",
                        to="frappe_app.customizeformfield",
                    ),
                ),
                (
                    "links",
                    models.ManyToManyField(
                        related_name="CustomizeFormLinks", to="frappe_app.doctypelink"
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "states",
                    models.ManyToManyField(
                        related_name="CustomizeFormStates", to="frappe_app.doctypestate"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="customhtmlblock",
            name="roles",
            field=models.ManyToManyField(
                related_name="CustomHTMLBlockRoles", to="frappe_app.hasrole"
            ),
        ),
        migrations.CreateModel(
            name="CustomField",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(blank=True, max_length=255, null=True)),
                ("label_help", models.TextField(blank=True, null=True)),
                ("fieldname", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "insert_after",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "fieldtype",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Autocomplete", "Autocomplete"),
                            ("Attach", "Attach"),
                            ("Attach Image", "Attach Image"),
                            ("Barcode", "Barcode"),
                            ("Button", "Button"),
                            ("Check", "Check"),
                            ("Code", "Code"),
                            ("Color", "Color"),
                            ("Column Break", "Column Break"),
                            ("Currency", "Currency"),
                            ("Data", "Data"),
                            ("Date", "Date"),
                            ("Datetime", "Datetime"),
                            ("Duration", "Duration"),
                            ("Dynamic Link", "Dynamic Link"),
                            ("Float", "Float"),
                            ("Fold", "Fold"),
                            ("Geolocation", "Geolocation"),
                            ("Heading", "Heading"),
                            ("HTML", "HTML"),
                            ("HTML Editor", "HTML Editor"),
                            ("Icon", "Icon"),
                            ("Image", "Image"),
                            ("Int", "Int"),
                            ("JSON", "JSON"),
                            ("Link", "Link"),
                            ("Long Text", "Long Text"),
                            ("Markdown Editor", "Markdown Editor"),
                            ("Password", "Password"),
                            ("Percent", "Percent"),
                            ("Phone", "Phone"),
                            ("Read Only", "Read Only"),
                            ("Rating", "Rating"),
                            ("Section Break", "Section Break"),
                            ("Select", "Select"),
                            ("Signature", "Signature"),
                            ("Small Text", "Small Text"),
                            ("Tab Break", "Tab Break"),
                            ("Table", "Table"),
                            ("Table MultiSelect", "Table MultiSelect"),
                            ("Text", "Text"),
                            ("Text Editor", "Text Editor"),
                            ("Time", "Time"),
                        ],
                        default="Data",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "precision",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("0", "0"),
                            ("1", "1"),
                            ("2", "2"),
                            ("3", "3"),
                            ("4", "4"),
                            ("5", "5"),
                            ("6", "6"),
                            ("7", "7"),
                            ("8", "8"),
                            ("9", "9"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("options", models.TextField(blank=True, null=True)),
                ("fetch_from", models.TextField(blank=True, null=True)),
                (
                    "fetch_if_empty",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("options_help", models.TextField(blank=True, null=True)),
                (
                    "collapsible",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "collapsible_depends_on",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("default", models.TextField(blank=True, null=True)),
                ("depends_on", models.CharField(blank=True, max_length=255, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("permlevel", models.IntegerField(blank=True, default="0", null=True)),
                ("width", models.CharField(blank=True, max_length=255, null=True)),
                ("columns", models.IntegerField(blank=True, null=True)),
                ("reqd", models.BooleanField(blank=True, default="0", null=True)),
                ("unique", models.BooleanField(blank=True, default="0", null=True)),
                ("is_virtual", models.BooleanField(blank=True, default="0", null=True)),
                ("read_only", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "ignore_user_permissions",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("hidden", models.BooleanField(blank=True, default="0", null=True)),
                ("print_hide", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "print_hide_if_no_value",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "print_width",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("no_copy", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "allow_on_submit",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "in_list_view",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "in_standard_filter",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "in_global_search",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("bold", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "report_hide",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "search_index",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "ignore_xss_filter",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "translatable",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("length", models.IntegerField(blank=True, null=True)),
                (
                    "mandatory_depends_on",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "read_only_depends_on",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "allow_in_quick_entry",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("in_preview", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "hide_seconds",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("hide_days", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "hide_border",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "non_negative",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "is_system_generated",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "sort_options",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("link_filters", models.JSONField(blank=True, null=True)),
                (
                    "show_dashboard",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "placeholder",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "dt",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CustomFieldDt",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CustomFieldModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CustomDocPerm",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("if_owner", models.BooleanField(blank=True, default="0", null=True)),
                ("permlevel", models.IntegerField(blank=True, default="0", null=True)),
                ("read", models.BooleanField(blank=True, default="1", null=True)),
                ("write", models.BooleanField(blank=True, default="0", null=True)),
                ("create", models.BooleanField(blank=True, default="0", null=True)),
                ("delete", models.BooleanField(blank=True, default="0", null=True)),
                ("submit", models.BooleanField(blank=True, default="0", null=True)),
                ("cancel", models.BooleanField(blank=True, default="0", null=True)),
                ("amend", models.BooleanField(blank=True, default="0", null=True)),
                ("report", models.BooleanField(blank=True, default="0", null=True)),
                ("export", models.BooleanField(blank=True, default="1", null=True)),
                (
                    "custom_import",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("share", models.BooleanField(blank=True, default="0", null=True)),
                ("print", models.BooleanField(blank=True, default="0", null=True)),
                ("email", models.BooleanField(blank=True, default="0", null=True)),
                ("parent", models.CharField(blank=True, max_length=255, null=True)),
                ("select", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CustomDocPermRole",
                        to="frappe_app.role",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ContactUsSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "forward_to_email",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("heading", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "introduction",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("query_options", models.TextField(blank=True, null=True)),
                (
                    "address_title",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_line1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_line2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(blank=True, max_length=255, null=True)),
                ("state", models.CharField(blank=True, max_length=255, null=True)),
                ("pincode", models.CharField(blank=True, max_length=255, null=True)),
                ("country", models.CharField(blank=True, max_length=255, null=True)),
                ("phone", models.CharField(blank=True, max_length=255, null=True)),
                ("email_id", models.CharField(blank=True, max_length=255, null=True)),
                ("skype", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "disable_contact_us",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ContactPhone",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("phone", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "is_primary_phone",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "is_primary_mobile_no",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ContactEmail",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("email_id", models.CharField(blank=True, max_length=255, null=True)),
                ("is_primary", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("first_name", models.CharField(blank=True, max_length=255, null=True)),
                ("last_name", models.CharField(blank=True, max_length=255, null=True)),
                ("email_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Passive", "Passive"),
                            ("Open", "Open"),
                            ("Replied", "Replied"),
                        ],
                        default="Passive",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=255, null=True)),
                ("image", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "is_primary_contact",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("department", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "designation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "unsubscribed",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("mobile_no", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "pulled_from_google_contacts",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "sync_with_google_contacts",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "custom_google_contacts",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ContactAddress",
                        to="frappe_app.address",
                    ),
                ),
                (
                    "email_ids",
                    models.ManyToManyField(
                        related_name="ContactEmailIds", to="frappe_app.contactemail"
                    ),
                ),
                (
                    "gender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ContactGender",
                        to="frappe_app.gender",
                    ),
                ),
                (
                    "google_contacts",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ContactGoogleContacts",
                        to="frappe_app.googlecontacts",
                    ),
                ),
                (
                    "links",
                    models.ManyToManyField(
                        related_name="ContactLinks", to="frappe_app.dynamiclink"
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "phone_nos",
                    models.ManyToManyField(
                        related_name="ContactPhoneNos", to="frappe_app.contactphone"
                    ),
                ),
                (
                    "salutation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ContactSalutation",
                        to="frappe_app.salutation",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ContactUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ConsoleLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("script", models.CharField(blank=True, max_length=255, null=True)),
                ("type", models.CharField(blank=True, max_length=255, null=True)),
                ("committed", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="connectedapp",
            name="query_parameters",
            field=models.ManyToManyField(
                related_name="ConnectedAppQueryParameters",
                to="frappe_app.queryparameters",
            ),
        ),
        migrations.AddField(
            model_name="connectedapp",
            name="scopes",
            field=models.ManyToManyField(
                related_name="ConnectedAppScopes", to="frappe_app.oauthscope"
            ),
        ),
        migrations.CreateModel(
            name="CompanyHistory",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("year", models.CharField(blank=True, max_length=255, null=True)),
                ("highlight", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CommunicationLink",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("link_name", models.CharField(blank=True, max_length=255, null=True)),
                ("link_title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "link_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CommunicationLinkLinkDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="communication",
            name="email_account",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="CommunicationEmailAccount",
                to="frappe_app.emailaccount",
            ),
        ),
        migrations.AddField(
            model_name="communication",
            name="email_template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="CommunicationEmailTemplate",
                to="frappe_app.emailtemplate",
            ),
        ),
        migrations.AddField(
            model_name="communication",
            name="in_reply_to",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="CommunicationInReplyTo",
                to="frappe_app.communication",
            ),
        ),
        migrations.AddField(
            model_name="communication",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="communication",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="communication",
            name="reference_doctype",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="CommunicationReferenceDoctype",
                to="frappe_app.doctype",
            ),
        ),
        migrations.AddField(
            model_name="communication",
            name="timeline_links",
            field=models.ManyToManyField(
                related_name="CommunicationTimelineLinks",
                to="frappe_app.communicationlink",
            ),
        ),
        migrations.AddField(
            model_name="communication",
            name="user",
            field=models.ForeignKey(
                blank=True,
                default="__user",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="CommunicationUser",
                to="frappe_app.user",
            ),
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "comment_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Comment", "Comment"),
                            ("Like", "Like"),
                            ("Info", "Info"),
                            ("Label", "Label"),
                            ("Workflow", "Workflow"),
                            ("Created", "Created"),
                            ("Submitted", "Submitted"),
                            ("Cancelled", "Cancelled"),
                            ("Updated", "Updated"),
                            ("Deleted", "Deleted"),
                            ("Assigned", "Assigned"),
                            ("Assignment Completed", "Assignment Completed"),
                            ("Attachment", "Attachment"),
                            ("Attachment Removed", "Attachment Removed"),
                            ("Shared", "Shared"),
                            ("Unshared", "Unshared"),
                            ("Bot", "Bot"),
                            ("Relinked", "Relinked"),
                            ("Edit", "Edit"),
                        ],
                        default="Comment",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "comment_email",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("subject", models.TextField(blank=True, null=True)),
                ("comment_by", models.CharField(blank=True, max_length=255, null=True)),
                ("published", models.BooleanField(blank=True, default="0", null=True)),
                ("seen", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "reference_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "reference_owner",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("content", models.TextField(blank=True, null=True)),
                ("ip_address", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CommentReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ClientScript",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("script", models.CharField(blank=True, max_length=255, null=True)),
                ("sample", models.TextField(blank=True, null=True)),
                ("enabled", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "view",
                    models.CharField(
                        blank=True,
                        choices=[("List", "List"), ("Form", "Form")],
                        default="Form",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "dt",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ClientScriptDt",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ClientScriptModule",
                        to="frappe_app.moduledef",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ChangelogFeed",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("app_name", models.CharField(blank=True, max_length=255, null=True)),
                ("link", models.TextField(blank=True, null=True)),
                ("posting_timestamp", models.DateTimeField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CalendarView",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "subject_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "start_date_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "end_date_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("all_day", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CalendarViewReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BulkUpdate",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                ("update_value", models.TextField(blank=True, null=True)),
                ("condition", models.TextField(blank=True, null=True)),
                ("limit", models.IntegerField(blank=True, default="500", null=True)),
                (
                    "document_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="BulkUpdateDocumentType",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BlogSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("blog_title", models.CharField(blank=True, max_length=255, null=True)),
                ("blog_introduction", models.TextField(blank=True, null=True)),
                (
                    "enable_social_sharing",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "show_cta_in_blog",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("subtitle", models.CharField(blank=True, max_length=255, null=True)),
                ("cta_label", models.CharField(blank=True, max_length=255, null=True)),
                ("cta_url", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "comment_limit",
                    models.IntegerField(blank=True, default="5", null=True),
                ),
                (
                    "allow_guest_to_comment",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "browse_by_category",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("like_limit", models.IntegerField(blank=True, default="5", null=True)),
                (
                    "preview_image",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(blank=True, max_length=255, null=True)),
                ("published_on", models.DateField(blank=True, null=True)),
                ("published", models.BooleanField(blank=True, default="0", null=True)),
                ("route", models.CharField(blank=True, max_length=255, null=True)),
                ("blog_intro", models.TextField(blank=True, null=True)),
                (
                    "content_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Markdown", "Markdown"),
                            ("Rich Text", "Rich Text"),
                            ("HTML", "HTML"),
                        ],
                        default="Markdown",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("content", models.CharField(blank=True, max_length=255, null=True)),
                ("content_md", models.TextField(blank=True, null=True)),
                ("content_html", models.TextField(blank=True, null=True)),
                ("email_sent", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "disable_comments",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("meta_description", models.TextField(blank=True, null=True)),
                ("meta_image", models.CharField(blank=True, max_length=255, null=True)),
                ("google_preview", models.TextField(blank=True, null=True)),
                ("read_time", models.IntegerField(blank=True, null=True)),
                ("featured", models.BooleanField(blank=True, default="0", null=True)),
                ("hide_cta", models.BooleanField(blank=True, default="0", null=True)),
                ("meta_title", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "enable_email_notification",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                (
                    "disable_likes",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "blog_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="BlogPostBlogCategory",
                        to="frappe_app.blogcategory",
                    ),
                ),
                (
                    "blogger",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="BlogPostBlogger",
                        to="frappe_app.blogger",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="blogger",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="BloggerUser",
                to="frappe_app.user",
            ),
        ),
        migrations.CreateModel(
            name="AutoRepeatDay",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "day",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Monday", "Monday"),
                            ("Tuesday", "Tuesday"),
                            ("Wednesday", "Wednesday"),
                            ("Thursday", "Thursday"),
                            ("Friday", "Friday"),
                            ("Saturday", "Saturday"),
                            ("Sunday", "Sunday"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AutoRepeat",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "reference_document",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "start_date",
                    models.DateField(blank=True, default="Today", null=True),
                ),
                ("end_date", models.DateField(blank=True, null=True)),
                ("disabled", models.BooleanField(blank=True, default="0", null=True)),
                (
                    "frequency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Daily", "Daily"),
                            ("Weekly", "Weekly"),
                            ("Monthly", "Monthly"),
                            ("Quarterly", "Quarterly"),
                            ("Half-yearly", "Half-yearly"),
                            ("Yearly", "Yearly"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("repeat_on_day", models.IntegerField(blank=True, null=True)),
                ("next_schedule_date", models.DateField(blank=True, null=True)),
                (
                    "notify_by_email",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                ("recipients", models.TextField(blank=True, null=True)),
                (
                    "get_contacts",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("subject", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "message",
                    models.TextField(
                        blank=True,
                        default="Please find attached {{ doc.doctype }} #{{ doc.name }}",
                        null=True,
                    ),
                ),
                (
                    "preview_message",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Active", "Active"),
                            ("Disabled", "Disabled"),
                            ("Completed", "Completed"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "repeat_on_last_day",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "submit_on_creation",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "print_format",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="AutoRepeatPrintFormat",
                        to="frappe_app.printformat",
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="AutoRepeatReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "repeat_on_days",
                    models.ManyToManyField(
                        related_name="AutoRepeatRepeatOnDays",
                        to="frappe_app.autorepeatday",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="AutoRepeatTemplate",
                        to="frappe_app.emailtemplate",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AutoEmailReport",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("enabled", models.BooleanField(blank=True, default="1", null=True)),
                (
                    "report_type",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "send_if_data",
                    models.BooleanField(blank=True, default="1", null=True),
                ),
                ("data_modified_till", models.IntegerField(blank=True, null=True)),
                (
                    "no_of_rows",
                    models.IntegerField(blank=True, default="100", null=True),
                ),
                ("filters_display", models.TextField(blank=True, null=True)),
                ("filters", models.TextField(blank=True, null=True)),
                ("filter_meta", models.TextField(blank=True, null=True)),
                (
                    "from_date_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "to_date_field",
                    models.CharField(
                        blank=True, choices=[("", "")], max_length=255, null=True
                    ),
                ),
                (
                    "dynamic_date_period",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Daily", "Daily"),
                            ("Weekly", "Weekly"),
                            ("Monthly", "Monthly"),
                            ("Quarterly", "Quarterly"),
                            ("Half Yearly", "Half Yearly"),
                            ("Yearly", "Yearly"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("email_to", models.TextField(blank=True, null=True)),
                (
                    "day_of_week",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Monday", "Monday"),
                            ("Tuesday", "Tuesday"),
                            ("Wednesday", "Wednesday"),
                            ("Thursday", "Thursday"),
                            ("Friday", "Friday"),
                            ("Saturday", "Saturday"),
                            ("Sunday", "Sunday"),
                        ],
                        default="Monday",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Daily", "Daily"),
                            ("Weekdays", "Weekdays"),
                            ("Weekly", "Weekly"),
                            ("Monthly", "Monthly"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "format",
                    models.CharField(
                        blank=True,
                        choices=[("HTML", "HTML"), ("XLSX", "XLSX"), ("CSV", "CSV")],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "reference_report",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "use_first_day_of_period",
                    models.BooleanField(blank=True, default="0", null=True),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "report",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="AutoEmailReportReport",
                        to="frappe_app.report",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="AutoEmailReportSender",
                        to="frappe_app.emailaccount",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default="User",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="AutoEmailReportUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AuditTrail",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("document", models.CharField(blank=True, max_length=255, null=True)),
                ("version_table", models.TextField(blank=True, null=True)),
                ("rows_added", models.TextField(blank=True, null=True)),
                ("rows_removed", models.TextField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                (
                    "doctype_name",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="AuditTrailDoctypeName",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AssignmentRuleUser",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="AssignmentRuleUserUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AssignmentRuleDay",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "day",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Monday", "Monday"),
                            ("Tuesday", "Tuesday"),
                            ("Wednesday", "Wednesday"),
                            ("Thursday", "Thursday"),
                            ("Friday", "Friday"),
                            ("Saturday", "Saturday"),
                            ("Sunday", "Sunday"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="assignmentrule",
            name="assignment_days",
            field=models.ManyToManyField(
                related_name="AssignmentRuleAssignmentDays",
                to="frappe_app.assignmentruleday",
            ),
        ),
        migrations.AddField(
            model_name="assignmentrule",
            name="document_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="AssignmentRuleDocumentType",
                to="frappe_app.doctype",
            ),
        ),
        migrations.AddField(
            model_name="assignmentrule",
            name="last_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="AssignmentRuleLastUser",
                to="frappe_app.user",
            ),
        ),
        migrations.AddField(
            model_name="assignmentrule",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="assignmentrule",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="assignmentrule",
            name="users",
            field=models.ManyToManyField(
                related_name="AssignmentRuleUsers", to="frappe_app.assignmentruleuser"
            ),
        ),
        migrations.AddField(
            model_name="amendeddocumentnamingsettings",
            name="document_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="AmendedDocumentNamingSettingsDocumentType",
                to="frappe_app.doctype",
            ),
        ),
        migrations.AddField(
            model_name="amendeddocumentnamingsettings",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="amendeddocumentnamingsettings",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="AddressTemplate",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("is_default", models.BooleanField(blank=True, default="0", null=True)),
                ("template", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="AddressTemplateCountry",
                        to="frappe_app.country",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="address",
            name="country",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="AddressCountry",
                to="frappe_app.country",
            ),
        ),
        migrations.AddField(
            model_name="address",
            name="links",
            field=models.ManyToManyField(
                related_name="AddressLinks", to="frappe_app.dynamiclink"
            ),
        ),
        migrations.AddField(
            model_name="address",
            name="modified_by",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who last modified this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_modified",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="address",
            name="owner",
            field=models.ForeignKey(
                blank=True,
                help_text="The user who created this record.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(app_label)s_%(class)s_created",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="ActivityLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("subject", models.TextField(blank=True, null=True)),
                ("content", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "communication_date",
                    models.DateTimeField(blank=True, default="Now", null=True),
                ),
                (
                    "operation",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Login", "Login"),
                            ("Logout", "Logout"),
                            ("Impersonate", "Impersonate"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Success", "Success"),
                            ("Failed", "Failed"),
                            ("Linked", "Linked"),
                            ("Closed", "Closed"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "reference_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "reference_owner",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "timeline_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("link_name", models.CharField(blank=True, max_length=255, null=True)),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                ("ip_address", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "link_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ActivityLogLinkDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reference_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ActivityLogReferenceDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "timeline_doctype",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ActivityLogTimelineDoctype",
                        to="frappe_app.doctype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        default="__user",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ActivityLogUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AccessLog",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "export_from",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "timestamp",
                    models.DateTimeField(blank=True, default="Now", null=True),
                ),
                (
                    "reference_document",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("file_type", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "report_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("page", models.TextField(blank=True, null=True)),
                ("method", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "show_report",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "show_document",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("filters", models.CharField(blank=True, max_length=255, null=True)),
                ("columns", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="AccessLogUser",
                        to="frappe_app.user",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AboutUsTeamMember",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                ("image_link", models.CharField(blank=True, max_length=255, null=True)),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AboutUsSettings",
            fields=[
                (
                    "id",
                    models.CharField(
                        default=core.models.template.generate_by_hash,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                (
                    "company_introduction",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "company_history_heading",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "team_members_heading",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("footer", models.CharField(blank=True, max_length=255, null=True)),
                ("page_title", models.CharField(blank=True, max_length=255, null=True)),
                ("team_members_subtitle", models.TextField(blank=True, null=True)),
                (
                    "company_history",
                    models.ManyToManyField(
                        related_name="AboutUsSettingsCompanyHistory",
                        to="frappe_app.companyhistory",
                    ),
                ),
                (
                    "modified_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who last modified this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_modified",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        help_text="The user who created this record.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(app_label)s_%(class)s_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "team_members",
                    models.ManyToManyField(
                        related_name="AboutUsSettingsTeamMembers",
                        to="frappe_app.aboutusteammember",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
