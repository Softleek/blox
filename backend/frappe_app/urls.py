from django.urls import path, include
from rest_framework.routers import DefaultRouter
router = DefaultRouter()
from .views.core import *
router.register(r'permission_inspector', PermissionInspectorViewSet, basename='permission_inspector')
router.register(r'page', PageViewSet, basename='page')
router.register(r'user', UserViewSet, basename='user')
router.register(r'amended_document_naming_settings', AmendedDocumentNamingSettingsViewSet, basename='amended_document_naming_settings')
router.register(r'docperm', DocPermViewSet, basename='docperm')
router.register(r'custom_role', CustomRoleViewSet, basename='custom_role')
router.register(r'sms_log', SMSLogViewSet, basename='sms_log')
router.register(r'error_log', ErrorLogViewSet, basename='error_log')
router.register(r'block_module', BlockModuleViewSet, basename='block_module')
router.register(r'navbar_settings', NavbarSettingsViewSet, basename='navbar_settings')
router.register(r'custom_docperm', CustomDocPermViewSet, basename='custom_docperm')
router.register(r'doctype_state', DocTypeStateViewSet, basename='doctype_state')
router.register(r'access_log', AccessLogViewSet, basename='access_log')
router.register(r'data_import_log', DataImportLogViewSet, basename='data_import_log')
router.register(r'document_naming_rule', DocumentNamingRuleViewSet, basename='document_naming_rule')
router.register(r'communication_link', CommunicationLinkViewSet, basename='communication_link')
router.register(r'view_log', ViewLogViewSet, basename='view_log')
router.register(r'prepared_report', PreparedReportViewSet, basename='prepared_report')
router.register(r'has_role', HasRoleViewSet, basename='has_role')
router.register(r'role_profile', RoleProfileViewSet, basename='role_profile')
router.register(r'rq_job', RQJobViewSet, basename='rq_job')
router.register(r'user_select_document_type', UserSelectDocumentTypeViewSet, basename='user_select_document_type')
router.register(r'file', FileViewSet, basename='file')
router.register(r'log_setting_user', LogSettingUserViewSet, basename='log_setting_user')
router.register(r'recorder_suggested_index', RecorderSuggestedIndexViewSet, basename='recorder_suggested_index')
router.register(r'domain', DomainViewSet, basename='domain')
router.register(r'document_share_key', DocumentShareKeyViewSet, basename='document_share_key')
router.register(r'log_settings', LogSettingsViewSet, basename='log_settings')
router.register(r'user_group', UserGroupViewSet, basename='user_group')
router.register(r'package_import', PackageImportViewSet, basename='package_import')
router.register(r'language', LanguageViewSet, basename='language')
router.register(r'comment', CommentViewSet, basename='comment')
router.register(r'navbar_item', NavbarItemViewSet, basename='navbar_item')
router.register(r'user_permission', UserPermissionViewSet, basename='user_permission')
router.register(r'user_type', UserTypeViewSet, basename='user_type')
router.register(r'docfield', DocFieldViewSet, basename='docfield')
router.register(r'user_group_member', UserGroupMemberViewSet, basename='user_group_member')
router.register(r'system_settings', SystemSettingsViewSet, basename='system_settings')
router.register(r'installed_application', InstalledApplicationViewSet, basename='installed_application')
router.register(r'role_permission_for_page_and_report', RolePermissionForPageAndReportViewSet, basename='role_permission_for_page_and_report')
router.register(r'package_release', PackageReleaseViewSet, basename='package_release')
router.register(r'doctype_link', DocTypeLinkViewSet, basename='doctype_link')
router.register(r'submission_queue', SubmissionQueueViewSet, basename='submission_queue')
router.register(r'data_import', DataImportViewSet, basename='data_import')
router.register(r'sms_settings', SMSSettingsViewSet, basename='sms_settings')
router.register(r'user_document_type', UserDocumentTypeViewSet, basename='user_document_type')
router.register(r'user_email', UserEmailViewSet, basename='user_email')
router.register(r'version', VersionViewSet, basename='version')
router.register(r'dynamic_link', DynamicLinkViewSet, basename='dynamic_link')
router.register(r'recorder_query', RecorderQueryViewSet, basename='recorder_query')
router.register(r'transaction_log', TransactionLogViewSet, basename='transaction_log')
router.register(r'role', RoleViewSet, basename='role')
router.register(r'installed_applications', InstalledApplicationsViewSet, basename='installed_applications')
router.register(r'translation', TranslationViewSet, basename='translation')
router.register(r'document_naming_rule_condition', DocumentNamingRuleConditionViewSet, basename='document_naming_rule_condition')
router.register(r'role_replication', RoleReplicationViewSet, basename='role_replication')
router.register(r'user_type_module', UserTypeModuleViewSet, basename='user_type_module')
router.register(r'server_script', ServerScriptViewSet, basename='server_script')
router.register(r'session_default', SessionDefaultViewSet, basename='session_default')
router.register(r'docshare', DocShareViewSet, basename='docshare')
router.register(r'data_export', DataExportViewSet, basename='data_export')
router.register(r'sms_parameter', SMSParameterViewSet, basename='sms_parameter')
router.register(r'user_social_login', UserSocialLoginViewSet, basename='user_social_login')
router.register(r'defaultvalue', DefaultValueViewSet, basename='defaultvalue')
router.register(r'report_column', ReportColumnViewSet, basename='report_column')
router.register(r'module_def', ModuleDefViewSet, basename='module_def')
router.register(r'package', PackageViewSet, basename='package')
router.register(r'session_default_settings', SessionDefaultSettingsViewSet, basename='session_default_settings')
router.register(r'document_naming_settings', DocumentNamingSettingsViewSet, basename='document_naming_settings')
router.register(r'doctype', DocTypeViewSet, basename='doctype')
router.register(r'user_role_profile', UserRoleProfileViewSet, basename='user_role_profile')
router.register(r'report_filter', ReportFilterViewSet, basename='report_filter')
router.register(r'domain_settings', DomainSettingsViewSet, basename='domain_settings')
router.register(r'success_action', SuccessActionViewSet, basename='success_action')
router.register(r'recorder', RecorderViewSet, basename='recorder')
router.register(r'activity_log', ActivityLogViewSet, basename='activity_log')
router.register(r'module_profile', ModuleProfileViewSet, basename='module_profile')
router.register(r'doctype_action', DocTypeActionViewSet, basename='doctype_action')
router.register(r'rq_worker', RQWorkerViewSet, basename='rq_worker')
router.register(r'scheduled_job_type', ScheduledJobTypeViewSet, basename='scheduled_job_type')
router.register(r'audit_trail', AuditTrailViewSet, basename='audit_trail')
router.register(r'permission_log', PermissionLogViewSet, basename='permission_log')
router.register(r'deleted_document', DeletedDocumentViewSet, basename='deleted_document')
router.register(r'communication', CommunicationViewSet, basename='communication')
router.register(r'scheduled_job_log', ScheduledJobLogViewSet, basename='scheduled_job_log')
router.register(r'scheduler_event', SchedulerEventViewSet, basename='scheduler_event')
router.register(r'has_domain', HasDomainViewSet, basename='has_domain')
router.register(r'report', ReportViewSet, basename='report')
router.register(r'logs_to_clear', LogsToClearViewSet, basename='logs_to_clear')
router.register(r'patch_log', PatchLogViewSet, basename='patch_log')
from .views.website import *
router.register(r'utm_source', UTMSourceViewSet, basename='utm_source')
router.register(r'color', ColorViewSet, basename='color')
router.register(r'web_form', WebFormViewSet, basename='web_form')
router.register(r'help_category', HelpCategoryViewSet, basename='help_category')
router.register(r'utm_campaign', UTMCampaignViewSet, basename='utm_campaign')
router.register(r'company_history', CompanyHistoryViewSet, basename='company_history')
router.register(r'social_link_settings', SocialLinkSettingsViewSet, basename='social_link_settings')
router.register(r'web_page_view', WebPageViewViewSet, basename='web_page_view')
router.register(r'contact_us_settings', ContactUsSettingsViewSet, basename='contact_us_settings')
router.register(r'website_slideshow_item', WebsiteSlideshowItemViewSet, basename='website_slideshow_item')
router.register(r'about_us_settings', AboutUsSettingsViewSet, basename='about_us_settings')
router.register(r'website_script', WebsiteScriptViewSet, basename='website_script')
router.register(r'utm_medium', UTMMediumViewSet, basename='utm_medium')
router.register(r'website_sidebar_item', WebsiteSidebarItemViewSet, basename='website_sidebar_item')
router.register(r'web_template', WebTemplateViewSet, basename='web_template')
router.register(r'blog_settings', BlogSettingsViewSet, basename='blog_settings')
router.register(r'website_meta_tag', WebsiteMetaTagViewSet, basename='website_meta_tag')
router.register(r'website_theme_ignore_app', WebsiteThemeIgnoreAppViewSet, basename='website_theme_ignore_app')
router.register(r'web_page', WebPageViewSet, basename='web_page')
router.register(r'portal_menu_item', PortalMenuItemViewSet, basename='portal_menu_item')
router.register(r'website_route_redirect', WebsiteRouteRedirectViewSet, basename='website_route_redirect')
router.register(r'help_article', HelpArticleViewSet, basename='help_article')
router.register(r'web_page_block', WebPageBlockViewSet, basename='web_page_block')
router.register(r'portal_settings', PortalSettingsViewSet, basename='portal_settings')
router.register(r'web_template_field', WebTemplateFieldViewSet, basename='web_template_field')
router.register(r'about_us_team_member', AboutUsTeamMemberViewSet, basename='about_us_team_member')
router.register(r'website_route_meta', WebsiteRouteMetaViewSet, basename='website_route_meta')
router.register(r'blogger', BloggerViewSet, basename='blogger')
router.register(r'personal_data_deletion_request', PersonalDataDeletionRequestViewSet, basename='personal_data_deletion_request')
router.register(r'discussion_reply', DiscussionReplyViewSet, basename='discussion_reply')
router.register(r'web_form_field', WebFormFieldViewSet, basename='web_form_field')
router.register(r'personal_data_deletion_step', PersonalDataDeletionStepViewSet, basename='personal_data_deletion_step')
router.register(r'website_settings', WebsiteSettingsViewSet, basename='website_settings')
router.register(r'website_sidebar', WebsiteSidebarViewSet, basename='website_sidebar')
router.register(r'website_slideshow', WebsiteSlideshowViewSet, basename='website_slideshow')
router.register(r'personal_data_download_request', PersonalDataDownloadRequestViewSet, basename='personal_data_download_request')
router.register(r'top_bar_item', TopBarItemViewSet, basename='top_bar_item')
router.register(r'blog_post', BlogPostViewSet, basename='blog_post')
router.register(r'discussion_topic', DiscussionTopicViewSet, basename='discussion_topic')
router.register(r'blog_category', BlogCategoryViewSet, basename='blog_category')
router.register(r'website_theme', WebsiteThemeViewSet, basename='website_theme')
router.register(r'web_form_list_column', WebFormListColumnViewSet, basename='web_form_list_column')
from .views.workflow import *
router.register(r'workflow_state', WorkflowStateViewSet, basename='workflow_state')
router.register(r'workflow_document_state', WorkflowDocumentStateViewSet, basename='workflow_document_state')
router.register(r'workflow_action_master', WorkflowActionMasterViewSet, basename='workflow_action_master')
router.register(r'workflow', WorkflowViewSet, basename='workflow')
router.register(r'workflow_transition', WorkflowTransitionViewSet, basename='workflow_transition')
router.register(r'workflow_action', WorkflowActionViewSet, basename='workflow_action')
router.register(r'workflow_action_permitted_role', WorkflowActionPermittedRoleViewSet, basename='workflow_action_permitted_role')
from .views.email import *
router.register(r'email_account', EmailAccountViewSet, basename='email_account')
router.register(r'document_follow', DocumentFollowViewSet, basename='document_follow')
router.register(r'unhandled_email', UnhandledEmailViewSet, basename='unhandled_email')
router.register(r'email_unsubscribe', EmailUnsubscribeViewSet, basename='email_unsubscribe')
router.register(r'email_flag_queue', EmailFlagQueueViewSet, basename='email_flag_queue')
router.register(r'notification_recipient', NotificationRecipientViewSet, basename='notification_recipient')
router.register(r'auto_email_report', AutoEmailReportViewSet, basename='auto_email_report')
router.register(r'newsletter_email_group', NewsletterEmailGroupViewSet, basename='newsletter_email_group')
router.register(r'email_group_member', EmailGroupMemberViewSet, basename='email_group_member')
router.register(r'email_queue_recipient', EmailQueueRecipientViewSet, basename='email_queue_recipient')
router.register(r'notification', NotificationViewSet, basename='notification')
router.register(r'email_queue', EmailQueueViewSet, basename='email_queue')
router.register(r'email_group', EmailGroupViewSet, basename='email_group')
router.register(r'newsletter', NewsletterViewSet, basename='newsletter')
router.register(r'email_rule', EmailRuleViewSet, basename='email_rule')
router.register(r'newsletter_attachment', NewsletterAttachmentViewSet, basename='newsletter_attachment')
router.register(r'email_domain', EmailDomainViewSet, basename='email_domain')
router.register(r'imap_folder', IMAPFolderViewSet, basename='imap_folder')
router.register(r'email_template', EmailTemplateViewSet, basename='email_template')
from .views.custom import *
router.register(r'custom_field', CustomFieldViewSet, basename='custom_field')
router.register(r'customize_form', CustomizeFormViewSet, basename='customize_form')
router.register(r'doctype_layout_field', DocTypeLayoutFieldViewSet, basename='doctype_layout_field')
router.register(r'customize_form_field', CustomizeFormFieldViewSet, basename='customize_form_field')
router.register(r'doctype_layout', DocTypeLayoutViewSet, basename='doctype_layout')
router.register(r'client_script', ClientScriptViewSet, basename='client_script')
router.register(r'property_setter', PropertySetterViewSet, basename='property_setter')
from .views.geo import *
router.register(r'country', CountryViewSet, basename='country')
router.register(r'currency', CurrencyViewSet, basename='currency')
from .views.desk import *
router.register(r'dashboard_chart_link', DashboardChartLinkViewSet, basename='dashboard_chart_link')
router.register(r'route_history', RouteHistoryViewSet, basename='route_history')
router.register(r'notification_log', NotificationLogViewSet, basename='notification_log')
router.register(r'form_tour', FormTourViewSet, basename='form_tour')
router.register(r'dashboard_chart_field', DashboardChartFieldViewSet, basename='dashboard_chart_field')
router.register(r'console_log', ConsoleLogViewSet, basename='console_log')
router.register(r'onboarding_permission', OnboardingPermissionViewSet, basename='onboarding_permission')
router.register(r'workspace_quick_list', WorkspaceQuickListViewSet, basename='workspace_quick_list')
router.register(r'notification_settings', NotificationSettingsViewSet, basename='notification_settings')
router.register(r'workspace_shortcut', WorkspaceShortcutViewSet, basename='workspace_shortcut')
router.register(r'calendar_view', CalendarViewViewSet, basename='calendar_view')
router.register(r'number_card_link', NumberCardLinkViewSet, basename='number_card_link')
router.register(r'bulk_update', BulkUpdateViewSet, basename='bulk_update')
router.register(r'workspace_settings', WorkspaceSettingsViewSet, basename='workspace_settings')
router.register(r'note_seen_by', NoteSeenByViewSet, basename='note_seen_by')
router.register(r'workspace_custom_block', WorkspaceCustomBlockViewSet, basename='workspace_custom_block')
router.register(r'system_console', SystemConsoleViewSet, basename='system_console')
router.register(r'tag_link', TagLinkViewSet, basename='tag_link')
router.register(r'todo', ToDoViewSet, basename='todo')
router.register(r'dashboard_chart', DashboardChartViewSet, basename='dashboard_chart')
router.register(r'dashboard_chart_source', DashboardChartSourceViewSet, basename='dashboard_chart_source')
router.register(r'system_health_report_errors', SystemHealthReportErrorsViewSet, basename='system_health_report_errors')
router.register(r'tag', TagViewSet, basename='tag')
router.register(r'list_filter', ListFilterViewSet, basename='list_filter')
router.register(r'event_participants', EventParticipantsViewSet, basename='event_participants')
router.register(r'list_view_settings', ListViewSettingsViewSet, basename='list_view_settings')
router.register(r'global_search_doctype', GlobalSearchDocTypeViewSet, basename='global_search_doctype')
router.register(r'notification_subscribed_document', NotificationSubscribedDocumentViewSet, basename='notification_subscribed_document')
router.register(r'number_card', NumberCardViewSet, basename='number_card')
router.register(r'system_health_report_queue', SystemHealthReportQueueViewSet, basename='system_health_report_queue')
router.register(r'dashboard', DashboardViewSet, basename='dashboard')
router.register(r'onboarding_step_map', OnboardingStepMapViewSet, basename='onboarding_step_map')
router.register(r'system_health_report', SystemHealthReportViewSet, basename='system_health_report')
router.register(r'kanban_board_column', KanbanBoardColumnViewSet, basename='kanban_board_column')
router.register(r'global_search_settings', GlobalSearchSettingsViewSet, basename='global_search_settings')
router.register(r'system_health_report_tables', SystemHealthReportTablesViewSet, basename='system_health_report_tables')
router.register(r'kanban_board', KanbanBoardViewSet, basename='kanban_board')
router.register(r'desktop_icon', DesktopIconViewSet, basename='desktop_icon')
router.register(r'system_health_report_failing_jobs', SystemHealthReportFailingJobsViewSet, basename='system_health_report_failing_jobs')
router.register(r'workspace_number_card', WorkspaceNumberCardViewSet, basename='workspace_number_card')
router.register(r'event', EventViewSet, basename='event')
router.register(r'form_tour_step', FormTourStepViewSet, basename='form_tour_step')
router.register(r'onboarding_step', OnboardingStepViewSet, basename='onboarding_step')
router.register(r'module_onboarding', ModuleOnboardingViewSet, basename='module_onboarding')
router.register(r'dashboard_settings', DashboardSettingsViewSet, basename='dashboard_settings')
router.register(r'changelog_feed', ChangelogFeedViewSet, basename='changelog_feed')
router.register(r'workspace_chart', WorkspaceChartViewSet, basename='workspace_chart')
router.register(r'note', NoteViewSet, basename='note')
router.register(r'workspace', WorkspaceViewSet, basename='workspace')
router.register(r'system_health_report_workers', SystemHealthReportWorkersViewSet, basename='system_health_report_workers')
router.register(r'workspace_link', WorkspaceLinkViewSet, basename='workspace_link')
router.register(r'custom_html_block', CustomHTMLBlockViewSet, basename='custom_html_block')
from .views.integrations import *
router.register(r'google_contacts', GoogleContactsViewSet, basename='google_contacts')
router.register(r'oauth_client', OAuthClientViewSet, basename='oauth_client')
router.register(r'oauth_authorization_code', OAuthAuthorizationCodeViewSet, basename='oauth_authorization_code')
router.register(r'integration_request', IntegrationRequestViewSet, basename='integration_request')
router.register(r'oauth_bearer_token', OAuthBearerTokenViewSet, basename='oauth_bearer_token')
router.register(r'token_cache', TokenCacheViewSet, basename='token_cache')
router.register(r'google_calendar', GoogleCalendarViewSet, basename='google_calendar')
router.register(r'slack_webhook_url', SlackWebhookURLViewSet, basename='slack_webhook_url')
router.register(r'oauth_client_role', OAuthClientRoleViewSet, basename='oauth_client_role')
router.register(r'push_notification_settings', PushNotificationSettingsViewSet, basename='push_notification_settings')
router.register(r'social_login_key', SocialLoginKeyViewSet, basename='social_login_key')
router.register(r'webhook_request_log', WebhookRequestLogViewSet, basename='webhook_request_log')
router.register(r'ldap_settings', LDAPSettingsViewSet, basename='ldap_settings')
router.register(r'connected_app', ConnectedAppViewSet, basename='connected_app')
router.register(r'oauth_scope', OAuthScopeViewSet, basename='oauth_scope')
router.register(r'dropbox_settings', DropboxSettingsViewSet, basename='dropbox_settings')
router.register(r'social_login_keys', SocialLoginKeysViewSet, basename='social_login_keys')
router.register(r'google_drive', GoogleDriveViewSet, basename='google_drive')
router.register(r'oauth_provider_settings', OAuthProviderSettingsViewSet, basename='oauth_provider_settings')
router.register(r'google_settings', GoogleSettingsViewSet, basename='google_settings')
router.register(r'webhook', WebhookViewSet, basename='webhook')
router.register(r'webhook_data', WebhookDataViewSet, basename='webhook_data')
router.register(r'query_parameters', QueryParametersViewSet, basename='query_parameters')
router.register(r'geolocation_settings', GeolocationSettingsViewSet, basename='geolocation_settings')
router.register(r'ldap_group_mapping', LDAPGroupMappingViewSet, basename='ldap_group_mapping')
router.register(r'webhook_header', WebhookHeaderViewSet, basename='webhook_header')
router.register(r's3_backup_settings', S3BackupSettingsViewSet, basename='s3_backup_settings')
from .views.printing import *
router.register(r'letter_head', LetterHeadViewSet, basename='letter_head')
router.register(r'print_format_field_template', PrintFormatFieldTemplateViewSet, basename='print_format_field_template')
router.register(r'print_settings', PrintSettingsViewSet, basename='print_settings')
router.register(r'print_heading', PrintHeadingViewSet, basename='print_heading')
router.register(r'print_format', PrintFormatViewSet, basename='print_format')
router.register(r'print_style', PrintStyleViewSet, basename='print_style')
router.register(r'network_printer_settings', NetworkPrinterSettingsViewSet, basename='network_printer_settings')
from .views.contacts import *
router.register(r'contact_email', ContactEmailViewSet, basename='contact_email')
router.register(r'salutation', SalutationViewSet, basename='salutation')
router.register(r'contact_phone', ContactPhoneViewSet, basename='contact_phone')
router.register(r'contact', ContactViewSet, basename='contact')
router.register(r'address_template', AddressTemplateViewSet, basename='address_template')
router.register(r'gender', GenderViewSet, basename='gender')
router.register(r'address', AddressViewSet, basename='address')
from .views.social import *
router.register(r'energy_point_rule', EnergyPointRuleViewSet, basename='energy_point_rule')
router.register(r'review_level', ReviewLevelViewSet, basename='review_level')
router.register(r'energy_point_log', EnergyPointLogViewSet, basename='energy_point_log')
router.register(r'energy_point_settings', EnergyPointSettingsViewSet, basename='energy_point_settings')
from .views.automation import *
router.register(r'assignment_rule_day', AssignmentRuleDayViewSet, basename='assignment_rule_day')
router.register(r'auto_repeat_day', AutoRepeatDayViewSet, basename='auto_repeat_day')
router.register(r'assignment_rule_user', AssignmentRuleUserViewSet, basename='assignment_rule_user')
router.register(r'auto_repeat', AutoRepeatViewSet, basename='auto_repeat')
router.register(r'milestone', MilestoneViewSet, basename='milestone')
router.register(r'milestone_tracker', MilestoneTrackerViewSet, basename='milestone_tracker')
router.register(r'reminder', ReminderViewSet, basename='reminder')
router.register(r'assignment_rule', AssignmentRuleViewSet, basename='assignment_rule')


urlpatterns = [
    path('', include(router.urls)),
]
